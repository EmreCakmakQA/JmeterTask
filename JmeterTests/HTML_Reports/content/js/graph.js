/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 225.0, "minX": 0.0, "maxY": 21609.0, "series": [{"data": [[0.0, 450.0], [0.1, 457.0], [0.2, 462.0], [0.3, 467.0], [0.4, 470.0], [0.5, 471.0], [0.6, 474.0], [0.7, 476.0], [0.8, 478.0], [0.9, 480.0], [1.0, 482.0], [1.1, 484.0], [1.2, 485.0], [1.3, 486.0], [1.4, 487.0], [1.5, 489.0], [1.6, 490.0], [1.7, 491.0], [1.8, 491.0], [1.9, 492.0], [2.0, 493.0], [2.1, 494.0], [2.2, 495.0], [2.3, 496.0], [2.4, 497.0], [2.5, 498.0], [2.6, 499.0], [2.7, 500.0], [2.8, 501.0], [2.9, 502.0], [3.0, 502.0], [3.1, 503.0], [3.2, 504.0], [3.3, 505.0], [3.4, 505.0], [3.5, 506.0], [3.6, 507.0], [3.7, 507.0], [3.8, 508.0], [3.9, 509.0], [4.0, 510.0], [4.1, 511.0], [4.2, 512.0], [4.3, 513.0], [4.4, 513.0], [4.5, 514.0], [4.6, 515.0], [4.7, 516.0], [4.8, 517.0], [4.9, 518.0], [5.0, 518.0], [5.1, 519.0], [5.2, 519.0], [5.3, 520.0], [5.4, 520.0], [5.5, 521.0], [5.6, 521.0], [5.7, 522.0], [5.8, 523.0], [5.9, 524.0], [6.0, 524.0], [6.1, 525.0], [6.2, 526.0], [6.3, 526.0], [6.4, 526.0], [6.5, 527.0], [6.6, 528.0], [6.7, 528.0], [6.8, 529.0], [6.9, 529.0], [7.0, 530.0], [7.1, 530.0], [7.2, 531.0], [7.3, 532.0], [7.4, 532.0], [7.5, 533.0], [7.6, 534.0], [7.7, 534.0], [7.8, 535.0], [7.9, 536.0], [8.0, 536.0], [8.1, 537.0], [8.2, 537.0], [8.3, 538.0], [8.4, 539.0], [8.5, 539.0], [8.6, 540.0], [8.7, 541.0], [8.8, 541.0], [8.9, 541.0], [9.0, 542.0], [9.1, 542.0], [9.2, 543.0], [9.3, 543.0], [9.4, 543.0], [9.5, 543.0], [9.6, 544.0], [9.7, 544.0], [9.8, 544.0], [9.9, 545.0], [10.0, 546.0], [10.1, 546.0], [10.2, 546.0], [10.3, 547.0], [10.4, 547.0], [10.5, 547.0], [10.6, 548.0], [10.7, 548.0], [10.8, 549.0], [10.9, 550.0], [11.0, 550.0], [11.1, 550.0], [11.2, 551.0], [11.3, 551.0], [11.4, 552.0], [11.5, 552.0], [11.6, 553.0], [11.7, 554.0], [11.8, 554.0], [11.9, 555.0], [12.0, 555.0], [12.1, 556.0], [12.2, 556.0], [12.3, 556.0], [12.4, 557.0], [12.5, 557.0], [12.6, 557.0], [12.7, 558.0], [12.8, 558.0], [12.9, 559.0], [13.0, 559.0], [13.1, 560.0], [13.2, 560.0], [13.3, 560.0], [13.4, 561.0], [13.5, 561.0], [13.6, 561.0], [13.7, 562.0], [13.8, 562.0], [13.9, 562.0], [14.0, 563.0], [14.1, 563.0], [14.2, 564.0], [14.3, 565.0], [14.4, 565.0], [14.5, 565.0], [14.6, 566.0], [14.7, 566.0], [14.8, 566.0], [14.9, 567.0], [15.0, 567.0], [15.1, 568.0], [15.2, 568.0], [15.3, 568.0], [15.4, 569.0], [15.5, 569.0], [15.6, 569.0], [15.7, 570.0], [15.8, 570.0], [15.9, 571.0], [16.0, 571.0], [16.1, 572.0], [16.2, 572.0], [16.3, 572.0], [16.4, 573.0], [16.5, 573.0], [16.6, 574.0], [16.7, 574.0], [16.8, 574.0], [16.9, 575.0], [17.0, 575.0], [17.1, 576.0], [17.2, 576.0], [17.3, 577.0], [17.4, 578.0], [17.5, 578.0], [17.6, 578.0], [17.7, 579.0], [17.8, 579.0], [17.9, 580.0], [18.0, 580.0], [18.1, 581.0], [18.2, 581.0], [18.3, 582.0], [18.4, 582.0], [18.5, 583.0], [18.6, 583.0], [18.7, 584.0], [18.8, 584.0], [18.9, 585.0], [19.0, 585.0], [19.1, 585.0], [19.2, 586.0], [19.3, 586.0], [19.4, 586.0], [19.5, 587.0], [19.6, 587.0], [19.7, 587.0], [19.8, 588.0], [19.9, 589.0], [20.0, 589.0], [20.1, 589.0], [20.2, 590.0], [20.3, 590.0], [20.4, 590.0], [20.5, 591.0], [20.6, 591.0], [20.7, 592.0], [20.8, 593.0], [20.9, 593.0], [21.0, 593.0], [21.1, 594.0], [21.2, 594.0], [21.3, 594.0], [21.4, 595.0], [21.5, 595.0], [21.6, 596.0], [21.7, 596.0], [21.8, 597.0], [21.9, 597.0], [22.0, 597.0], [22.1, 598.0], [22.2, 598.0], [22.3, 598.0], [22.4, 599.0], [22.5, 599.0], [22.6, 600.0], [22.7, 600.0], [22.8, 600.0], [22.9, 601.0], [23.0, 601.0], [23.1, 601.0], [23.2, 602.0], [23.3, 602.0], [23.4, 602.0], [23.5, 602.0], [23.6, 603.0], [23.7, 603.0], [23.8, 603.0], [23.9, 604.0], [24.0, 604.0], [24.1, 605.0], [24.2, 605.0], [24.3, 606.0], [24.4, 606.0], [24.5, 606.0], [24.6, 607.0], [24.7, 607.0], [24.8, 608.0], [24.9, 608.0], [25.0, 609.0], [25.1, 609.0], [25.2, 610.0], [25.3, 610.0], [25.4, 611.0], [25.5, 611.0], [25.6, 612.0], [25.7, 612.0], [25.8, 612.0], [25.9, 613.0], [26.0, 613.0], [26.1, 614.0], [26.2, 614.0], [26.3, 614.0], [26.4, 615.0], [26.5, 615.0], [26.6, 615.0], [26.7, 616.0], [26.8, 616.0], [26.9, 617.0], [27.0, 617.0], [27.1, 617.0], [27.2, 618.0], [27.3, 618.0], [27.4, 618.0], [27.5, 619.0], [27.6, 619.0], [27.7, 620.0], [27.8, 620.0], [27.9, 621.0], [28.0, 621.0], [28.1, 621.0], [28.2, 621.0], [28.3, 621.0], [28.4, 622.0], [28.5, 622.0], [28.6, 622.0], [28.7, 623.0], [28.8, 623.0], [28.9, 623.0], [29.0, 624.0], [29.1, 624.0], [29.2, 625.0], [29.3, 625.0], [29.4, 625.0], [29.5, 625.0], [29.6, 626.0], [29.7, 626.0], [29.8, 626.0], [29.9, 627.0], [30.0, 627.0], [30.1, 627.0], [30.2, 628.0], [30.3, 628.0], [30.4, 628.0], [30.5, 629.0], [30.6, 629.0], [30.7, 630.0], [30.8, 630.0], [30.9, 630.0], [31.0, 631.0], [31.1, 631.0], [31.2, 632.0], [31.3, 632.0], [31.4, 632.0], [31.5, 633.0], [31.6, 633.0], [31.7, 633.0], [31.8, 634.0], [31.9, 634.0], [32.0, 634.0], [32.1, 635.0], [32.2, 635.0], [32.3, 635.0], [32.4, 636.0], [32.5, 636.0], [32.6, 636.0], [32.7, 637.0], [32.8, 637.0], [32.9, 637.0], [33.0, 638.0], [33.1, 638.0], [33.2, 638.0], [33.3, 638.0], [33.4, 639.0], [33.5, 639.0], [33.6, 639.0], [33.7, 640.0], [33.8, 640.0], [33.9, 640.0], [34.0, 641.0], [34.1, 641.0], [34.2, 641.0], [34.3, 642.0], [34.4, 642.0], [34.5, 643.0], [34.6, 643.0], [34.7, 644.0], [34.8, 644.0], [34.9, 645.0], [35.0, 645.0], [35.1, 645.0], [35.2, 646.0], [35.3, 646.0], [35.4, 646.0], [35.5, 646.0], [35.6, 647.0], [35.7, 647.0], [35.8, 647.0], [35.9, 648.0], [36.0, 648.0], [36.1, 649.0], [36.2, 649.0], [36.3, 649.0], [36.4, 650.0], [36.5, 650.0], [36.6, 651.0], [36.7, 651.0], [36.8, 651.0], [36.9, 651.0], [37.0, 652.0], [37.1, 653.0], [37.2, 653.0], [37.3, 654.0], [37.4, 654.0], [37.5, 654.0], [37.6, 655.0], [37.7, 655.0], [37.8, 655.0], [37.9, 656.0], [38.0, 656.0], [38.1, 657.0], [38.2, 657.0], [38.3, 658.0], [38.4, 658.0], [38.5, 659.0], [38.6, 659.0], [38.7, 659.0], [38.8, 660.0], [38.9, 660.0], [39.0, 660.0], [39.1, 661.0], [39.2, 661.0], [39.3, 661.0], [39.4, 662.0], [39.5, 662.0], [39.6, 662.0], [39.7, 663.0], [39.8, 663.0], [39.9, 664.0], [40.0, 664.0], [40.1, 664.0], [40.2, 665.0], [40.3, 665.0], [40.4, 666.0], [40.5, 666.0], [40.6, 666.0], [40.7, 667.0], [40.8, 667.0], [40.9, 668.0], [41.0, 668.0], [41.1, 669.0], [41.2, 669.0], [41.3, 670.0], [41.4, 670.0], [41.5, 670.0], [41.6, 671.0], [41.7, 671.0], [41.8, 672.0], [41.9, 672.0], [42.0, 673.0], [42.1, 673.0], [42.2, 673.0], [42.3, 674.0], [42.4, 674.0], [42.5, 675.0], [42.6, 675.0], [42.7, 675.0], [42.8, 676.0], [42.9, 676.0], [43.0, 677.0], [43.1, 677.0], [43.2, 677.0], [43.3, 678.0], [43.4, 678.0], [43.5, 679.0], [43.6, 679.0], [43.7, 680.0], [43.8, 680.0], [43.9, 681.0], [44.0, 681.0], [44.1, 681.0], [44.2, 682.0], [44.3, 682.0], [44.4, 682.0], [44.5, 682.0], [44.6, 683.0], [44.7, 684.0], [44.8, 684.0], [44.9, 685.0], [45.0, 685.0], [45.1, 686.0], [45.2, 686.0], [45.3, 686.0], [45.4, 687.0], [45.5, 687.0], [45.6, 688.0], [45.7, 688.0], [45.8, 689.0], [45.9, 689.0], [46.0, 689.0], [46.1, 690.0], [46.2, 691.0], [46.3, 691.0], [46.4, 691.0], [46.5, 692.0], [46.6, 692.0], [46.7, 693.0], [46.8, 693.0], [46.9, 693.0], [47.0, 694.0], [47.1, 694.0], [47.2, 695.0], [47.3, 695.0], [47.4, 695.0], [47.5, 696.0], [47.6, 696.0], [47.7, 696.0], [47.8, 696.0], [47.9, 697.0], [48.0, 697.0], [48.1, 698.0], [48.2, 698.0], [48.3, 699.0], [48.4, 699.0], [48.5, 700.0], [48.6, 700.0], [48.7, 700.0], [48.8, 701.0], [48.9, 701.0], [49.0, 702.0], [49.1, 702.0], [49.2, 702.0], [49.3, 703.0], [49.4, 703.0], [49.5, 704.0], [49.6, 704.0], [49.7, 704.0], [49.8, 704.0], [49.9, 705.0], [50.0, 705.0], [50.1, 706.0], [50.2, 706.0], [50.3, 707.0], [50.4, 707.0], [50.5, 708.0], [50.6, 708.0], [50.7, 708.0], [50.8, 709.0], [50.9, 709.0], [51.0, 710.0], [51.1, 710.0], [51.2, 711.0], [51.3, 712.0], [51.4, 712.0], [51.5, 713.0], [51.6, 713.0], [51.7, 714.0], [51.8, 714.0], [51.9, 715.0], [52.0, 715.0], [52.1, 716.0], [52.2, 716.0], [52.3, 717.0], [52.4, 717.0], [52.5, 718.0], [52.6, 719.0], [52.7, 719.0], [52.8, 719.0], [52.9, 720.0], [53.0, 720.0], [53.1, 720.0], [53.2, 721.0], [53.3, 721.0], [53.4, 722.0], [53.5, 722.0], [53.6, 723.0], [53.7, 723.0], [53.8, 724.0], [53.9, 724.0], [54.0, 724.0], [54.1, 725.0], [54.2, 725.0], [54.3, 726.0], [54.4, 726.0], [54.5, 727.0], [54.6, 727.0], [54.7, 728.0], [54.8, 728.0], [54.9, 729.0], [55.0, 729.0], [55.1, 730.0], [55.2, 730.0], [55.3, 731.0], [55.4, 731.0], [55.5, 732.0], [55.6, 732.0], [55.7, 732.0], [55.8, 733.0], [55.9, 734.0], [56.0, 734.0], [56.1, 735.0], [56.2, 735.0], [56.3, 735.0], [56.4, 736.0], [56.5, 736.0], [56.6, 737.0], [56.7, 737.0], [56.8, 738.0], [56.9, 738.0], [57.0, 739.0], [57.1, 740.0], [57.2, 740.0], [57.3, 741.0], [57.4, 742.0], [57.5, 742.0], [57.6, 743.0], [57.7, 744.0], [57.8, 744.0], [57.9, 745.0], [58.0, 746.0], [58.1, 746.0], [58.2, 747.0], [58.3, 747.0], [58.4, 748.0], [58.5, 749.0], [58.6, 749.0], [58.7, 749.0], [58.8, 750.0], [58.9, 750.0], [59.0, 751.0], [59.1, 752.0], [59.2, 752.0], [59.3, 753.0], [59.4, 753.0], [59.5, 754.0], [59.6, 754.0], [59.7, 755.0], [59.8, 756.0], [59.9, 756.0], [60.0, 756.0], [60.1, 757.0], [60.2, 757.0], [60.3, 758.0], [60.4, 758.0], [60.5, 759.0], [60.6, 759.0], [60.7, 760.0], [60.8, 761.0], [60.9, 761.0], [61.0, 762.0], [61.1, 762.0], [61.2, 763.0], [61.3, 763.0], [61.4, 764.0], [61.5, 764.0], [61.6, 765.0], [61.7, 766.0], [61.8, 767.0], [61.9, 767.0], [62.0, 768.0], [62.1, 768.0], [62.2, 769.0], [62.3, 769.0], [62.4, 770.0], [62.5, 771.0], [62.6, 771.0], [62.7, 771.0], [62.8, 772.0], [62.9, 773.0], [63.0, 774.0], [63.1, 774.0], [63.2, 774.0], [63.3, 775.0], [63.4, 776.0], [63.5, 776.0], [63.6, 777.0], [63.7, 777.0], [63.8, 777.0], [63.9, 778.0], [64.0, 778.0], [64.1, 780.0], [64.2, 781.0], [64.3, 781.0], [64.4, 781.0], [64.5, 782.0], [64.6, 783.0], [64.7, 783.0], [64.8, 784.0], [64.9, 784.0], [65.0, 785.0], [65.1, 785.0], [65.2, 786.0], [65.3, 787.0], [65.4, 787.0], [65.5, 788.0], [65.6, 789.0], [65.7, 789.0], [65.8, 790.0], [65.9, 791.0], [66.0, 792.0], [66.1, 792.0], [66.2, 793.0], [66.3, 793.0], [66.4, 794.0], [66.5, 794.0], [66.6, 795.0], [66.7, 796.0], [66.8, 796.0], [66.9, 797.0], [67.0, 798.0], [67.1, 799.0], [67.2, 799.0], [67.3, 800.0], [67.4, 802.0], [67.5, 802.0], [67.6, 803.0], [67.7, 803.0], [67.8, 804.0], [67.9, 805.0], [68.0, 805.0], [68.1, 806.0], [68.2, 807.0], [68.3, 807.0], [68.4, 808.0], [68.5, 809.0], [68.6, 809.0], [68.7, 810.0], [68.8, 811.0], [68.9, 811.0], [69.0, 812.0], [69.1, 813.0], [69.2, 813.0], [69.3, 814.0], [69.4, 815.0], [69.5, 816.0], [69.6, 818.0], [69.7, 819.0], [69.8, 819.0], [69.9, 819.0], [70.0, 820.0], [70.1, 821.0], [70.2, 821.0], [70.3, 822.0], [70.4, 822.0], [70.5, 823.0], [70.6, 824.0], [70.7, 825.0], [70.8, 826.0], [70.9, 827.0], [71.0, 828.0], [71.1, 829.0], [71.2, 830.0], [71.3, 831.0], [71.4, 831.0], [71.5, 832.0], [71.6, 833.0], [71.7, 834.0], [71.8, 835.0], [71.9, 836.0], [72.0, 836.0], [72.1, 837.0], [72.2, 838.0], [72.3, 839.0], [72.4, 840.0], [72.5, 841.0], [72.6, 841.0], [72.7, 842.0], [72.8, 843.0], [72.9, 844.0], [73.0, 845.0], [73.1, 846.0], [73.2, 846.0], [73.3, 847.0], [73.4, 848.0], [73.5, 849.0], [73.6, 850.0], [73.7, 851.0], [73.8, 852.0], [73.9, 853.0], [74.0, 854.0], [74.1, 855.0], [74.2, 856.0], [74.3, 857.0], [74.4, 858.0], [74.5, 858.0], [74.6, 860.0], [74.7, 860.0], [74.8, 862.0], [74.9, 863.0], [75.0, 864.0], [75.1, 865.0], [75.2, 866.0], [75.3, 867.0], [75.4, 868.0], [75.5, 870.0], [75.6, 871.0], [75.7, 872.0], [75.8, 872.0], [75.9, 873.0], [76.0, 874.0], [76.1, 875.0], [76.2, 876.0], [76.3, 877.0], [76.4, 880.0], [76.5, 880.0], [76.6, 881.0], [76.7, 883.0], [76.8, 884.0], [76.9, 886.0], [77.0, 886.0], [77.1, 887.0], [77.2, 889.0], [77.3, 889.0], [77.4, 891.0], [77.5, 892.0], [77.6, 894.0], [77.7, 895.0], [77.8, 897.0], [77.9, 898.0], [78.0, 900.0], [78.1, 901.0], [78.2, 902.0], [78.3, 904.0], [78.4, 905.0], [78.5, 906.0], [78.6, 907.0], [78.7, 909.0], [78.8, 911.0], [78.9, 912.0], [79.0, 914.0], [79.1, 916.0], [79.2, 917.0], [79.3, 919.0], [79.4, 920.0], [79.5, 922.0], [79.6, 923.0], [79.7, 925.0], [79.8, 927.0], [79.9, 928.0], [80.0, 931.0], [80.1, 932.0], [80.2, 932.0], [80.3, 933.0], [80.4, 934.0], [80.5, 935.0], [80.6, 937.0], [80.7, 940.0], [80.8, 942.0], [80.9, 944.0], [81.0, 947.0], [81.1, 950.0], [81.2, 954.0], [81.3, 956.0], [81.4, 957.0], [81.5, 959.0], [81.6, 962.0], [81.7, 964.0], [81.8, 965.0], [81.9, 968.0], [82.0, 970.0], [82.1, 972.0], [82.2, 975.0], [82.3, 978.0], [82.4, 979.0], [82.5, 982.0], [82.6, 984.0], [82.7, 990.0], [82.8, 993.0], [82.9, 997.0], [83.0, 999.0], [83.1, 1001.0], [83.2, 1005.0], [83.3, 1008.0], [83.4, 1011.0], [83.5, 1014.0], [83.6, 1017.0], [83.7, 1023.0], [83.8, 1025.0], [83.9, 1028.0], [84.0, 1031.0], [84.1, 1038.0], [84.2, 1040.0], [84.3, 1045.0], [84.4, 1047.0], [84.5, 1052.0], [84.6, 1059.0], [84.7, 1062.0], [84.8, 1069.0], [84.9, 1073.0], [85.0, 1079.0], [85.1, 1087.0], [85.2, 1092.0], [85.3, 1097.0], [85.4, 1106.0], [85.5, 1111.0], [85.6, 1122.0], [85.7, 1126.0], [85.8, 1130.0], [85.9, 1134.0], [86.0, 1144.0], [86.1, 1153.0], [86.2, 1162.0], [86.3, 1168.0], [86.4, 1176.0], [86.5, 1192.0], [86.6, 1199.0], [86.7, 1206.0], [86.8, 1212.0], [86.9, 1221.0], [87.0, 1240.0], [87.1, 1254.0], [87.2, 1264.0], [87.3, 1280.0], [87.4, 1290.0], [87.5, 1307.0], [87.6, 1316.0], [87.7, 1330.0], [87.8, 1338.0], [87.9, 1353.0], [88.0, 1363.0], [88.1, 1378.0], [88.2, 1386.0], [88.3, 1394.0], [88.4, 1406.0], [88.5, 1415.0], [88.6, 1433.0], [88.7, 1458.0], [88.8, 1476.0], [88.9, 1501.0], [89.0, 1518.0], [89.1, 1531.0], [89.2, 1551.0], [89.3, 1572.0], [89.4, 1588.0], [89.5, 1622.0], [89.6, 1659.0], [89.7, 1678.0], [89.8, 1712.0], [89.9, 1758.0], [90.0, 1778.0], [90.1, 1806.0], [90.2, 1833.0], [90.3, 1850.0], [90.4, 1867.0], [90.5, 1908.0], [90.6, 1932.0], [90.7, 1949.0], [90.8, 1988.0], [90.9, 2013.0], [91.0, 2055.0], [91.1, 2070.0], [91.2, 2090.0], [91.3, 2120.0], [91.4, 2152.0], [91.5, 2168.0], [91.6, 2188.0], [91.7, 2225.0], [91.8, 2264.0], [91.9, 2292.0], [92.0, 2333.0], [92.1, 2352.0], [92.2, 2394.0], [92.3, 2426.0], [92.4, 2468.0], [92.5, 2502.0], [92.6, 2547.0], [92.7, 2580.0], [92.8, 2617.0], [92.9, 2652.0], [93.0, 2683.0], [93.1, 2716.0], [93.2, 2760.0], [93.3, 2792.0], [93.4, 2815.0], [93.5, 2857.0], [93.6, 2894.0], [93.7, 2929.0], [93.8, 2978.0], [93.9, 3033.0], [94.0, 3079.0], [94.1, 3116.0], [94.2, 3149.0], [94.3, 3196.0], [94.4, 3219.0], [94.5, 3248.0], [94.6, 3318.0], [94.7, 3386.0], [94.8, 3432.0], [94.9, 3498.0], [95.0, 3557.0], [95.1, 3580.0], [95.2, 3621.0], [95.3, 3660.0], [95.4, 3720.0], [95.5, 3812.0], [95.6, 3837.0], [95.7, 3885.0], [95.8, 3950.0], [95.9, 3982.0], [96.0, 4021.0], [96.1, 4114.0], [96.2, 4187.0], [96.3, 4218.0], [96.4, 4275.0], [96.5, 4393.0], [96.6, 4558.0], [96.7, 4646.0], [96.8, 4750.0], [96.9, 4835.0], [97.0, 4910.0], [97.1, 4965.0], [97.2, 5030.0], [97.3, 5138.0], [97.4, 5213.0], [97.5, 5361.0], [97.6, 5440.0], [97.7, 5586.0], [97.8, 5657.0], [97.9, 5847.0], [98.0, 5937.0], [98.1, 6086.0], [98.2, 6277.0], [98.3, 6469.0], [98.4, 6656.0], [98.5, 6896.0], [98.6, 7010.0], [98.7, 7445.0], [98.8, 7746.0], [98.9, 8195.0], [99.0, 8499.0], [99.1, 8797.0], [99.2, 9098.0], [99.3, 9872.0], [99.4, 10529.0], [99.5, 10946.0], [99.6, 11626.0], [99.7, 13274.0], [99.8, 15286.0], [99.9, 19022.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 225.0], [0.1, 235.0], [0.2, 239.0], [0.3, 241.0], [0.4, 242.0], [0.5, 243.0], [0.6, 244.0], [0.7, 244.0], [0.8, 245.0], [0.9, 246.0], [1.0, 247.0], [1.1, 248.0], [1.2, 248.0], [1.3, 248.0], [1.4, 249.0], [1.5, 249.0], [1.6, 250.0], [1.7, 250.0], [1.8, 251.0], [1.9, 251.0], [2.0, 251.0], [2.1, 252.0], [2.2, 252.0], [2.3, 253.0], [2.4, 253.0], [2.5, 253.0], [2.6, 254.0], [2.7, 254.0], [2.8, 254.0], [2.9, 255.0], [3.0, 255.0], [3.1, 255.0], [3.2, 255.0], [3.3, 256.0], [3.4, 256.0], [3.5, 256.0], [3.6, 256.0], [3.7, 256.0], [3.8, 257.0], [3.9, 257.0], [4.0, 257.0], [4.1, 257.0], [4.2, 257.0], [4.3, 257.0], [4.4, 258.0], [4.5, 258.0], [4.6, 258.0], [4.7, 258.0], [4.8, 259.0], [4.9, 259.0], [5.0, 259.0], [5.1, 259.0], [5.2, 259.0], [5.3, 260.0], [5.4, 260.0], [5.5, 260.0], [5.6, 260.0], [5.7, 260.0], [5.8, 260.0], [5.9, 261.0], [6.0, 261.0], [6.1, 261.0], [6.2, 261.0], [6.3, 261.0], [6.4, 261.0], [6.5, 262.0], [6.6, 262.0], [6.7, 262.0], [6.8, 262.0], [6.9, 262.0], [7.0, 263.0], [7.1, 263.0], [7.2, 263.0], [7.3, 263.0], [7.4, 263.0], [7.5, 263.0], [7.6, 264.0], [7.7, 264.0], [7.8, 264.0], [7.9, 264.0], [8.0, 264.0], [8.1, 264.0], [8.2, 264.0], [8.3, 265.0], [8.4, 265.0], [8.5, 265.0], [8.6, 265.0], [8.7, 265.0], [8.8, 265.0], [8.9, 265.0], [9.0, 266.0], [9.1, 266.0], [9.2, 266.0], [9.3, 266.0], [9.4, 266.0], [9.5, 266.0], [9.6, 266.0], [9.7, 266.0], [9.8, 267.0], [9.9, 267.0], [10.0, 267.0], [10.1, 267.0], [10.2, 267.0], [10.3, 267.0], [10.4, 267.0], [10.5, 267.0], [10.6, 267.0], [10.7, 267.0], [10.8, 268.0], [10.9, 268.0], [11.0, 268.0], [11.1, 268.0], [11.2, 268.0], [11.3, 268.0], [11.4, 268.0], [11.5, 268.0], [11.6, 268.0], [11.7, 268.0], [11.8, 269.0], [11.9, 269.0], [12.0, 269.0], [12.1, 269.0], [12.2, 269.0], [12.3, 269.0], [12.4, 269.0], [12.5, 269.0], [12.6, 269.0], [12.7, 270.0], [12.8, 270.0], [12.9, 270.0], [13.0, 270.0], [13.1, 270.0], [13.2, 270.0], [13.3, 270.0], [13.4, 270.0], [13.5, 271.0], [13.6, 271.0], [13.7, 271.0], [13.8, 271.0], [13.9, 271.0], [14.0, 271.0], [14.1, 271.0], [14.2, 271.0], [14.3, 271.0], [14.4, 271.0], [14.5, 271.0], [14.6, 271.0], [14.7, 272.0], [14.8, 272.0], [14.9, 272.0], [15.0, 272.0], [15.1, 272.0], [15.2, 272.0], [15.3, 272.0], [15.4, 272.0], [15.5, 273.0], [15.6, 273.0], [15.7, 273.0], [15.8, 273.0], [15.9, 273.0], [16.0, 273.0], [16.1, 273.0], [16.2, 273.0], [16.3, 273.0], [16.4, 273.0], [16.5, 273.0], [16.6, 274.0], [16.7, 274.0], [16.8, 274.0], [16.9, 274.0], [17.0, 274.0], [17.1, 274.0], [17.2, 274.0], [17.3, 274.0], [17.4, 274.0], [17.5, 274.0], [17.6, 275.0], [17.7, 275.0], [17.8, 275.0], [17.9, 275.0], [18.0, 275.0], [18.1, 275.0], [18.2, 275.0], [18.3, 275.0], [18.4, 275.0], [18.5, 275.0], [18.6, 276.0], [18.7, 276.0], [18.8, 276.0], [18.9, 276.0], [19.0, 276.0], [19.1, 276.0], [19.2, 276.0], [19.3, 276.0], [19.4, 276.0], [19.5, 276.0], [19.6, 276.0], [19.7, 276.0], [19.8, 277.0], [19.9, 277.0], [20.0, 277.0], [20.1, 277.0], [20.2, 277.0], [20.3, 277.0], [20.4, 277.0], [20.5, 277.0], [20.6, 277.0], [20.7, 277.0], [20.8, 277.0], [20.9, 278.0], [21.0, 278.0], [21.1, 278.0], [21.2, 278.0], [21.3, 278.0], [21.4, 278.0], [21.5, 278.0], [21.6, 278.0], [21.7, 278.0], [21.8, 278.0], [21.9, 278.0], [22.0, 278.0], [22.1, 279.0], [22.2, 279.0], [22.3, 279.0], [22.4, 279.0], [22.5, 279.0], [22.6, 279.0], [22.7, 279.0], [22.8, 279.0], [22.9, 279.0], [23.0, 279.0], [23.1, 279.0], [23.2, 279.0], [23.3, 279.0], [23.4, 280.0], [23.5, 280.0], [23.6, 280.0], [23.7, 280.0], [23.8, 280.0], [23.9, 280.0], [24.0, 280.0], [24.1, 280.0], [24.2, 280.0], [24.3, 280.0], [24.4, 281.0], [24.5, 281.0], [24.6, 281.0], [24.7, 281.0], [24.8, 281.0], [24.9, 281.0], [25.0, 281.0], [25.1, 281.0], [25.2, 281.0], [25.3, 281.0], [25.4, 281.0], [25.5, 282.0], [25.6, 282.0], [25.7, 282.0], [25.8, 282.0], [25.9, 282.0], [26.0, 282.0], [26.1, 282.0], [26.2, 282.0], [26.3, 282.0], [26.4, 283.0], [26.5, 283.0], [26.6, 283.0], [26.7, 283.0], [26.8, 283.0], [26.9, 283.0], [27.0, 283.0], [27.1, 283.0], [27.2, 283.0], [27.3, 283.0], [27.4, 284.0], [27.5, 284.0], [27.6, 284.0], [27.7, 284.0], [27.8, 284.0], [27.9, 284.0], [28.0, 284.0], [28.1, 284.0], [28.2, 284.0], [28.3, 284.0], [28.4, 284.0], [28.5, 285.0], [28.6, 285.0], [28.7, 285.0], [28.8, 285.0], [28.9, 285.0], [29.0, 285.0], [29.1, 285.0], [29.2, 285.0], [29.3, 285.0], [29.4, 285.0], [29.5, 285.0], [29.6, 285.0], [29.7, 286.0], [29.8, 286.0], [29.9, 286.0], [30.0, 286.0], [30.1, 286.0], [30.2, 286.0], [30.3, 286.0], [30.4, 286.0], [30.5, 286.0], [30.6, 286.0], [30.7, 286.0], [30.8, 286.0], [30.9, 286.0], [31.0, 286.0], [31.1, 287.0], [31.2, 287.0], [31.3, 287.0], [31.4, 287.0], [31.5, 287.0], [31.6, 287.0], [31.7, 287.0], [31.8, 287.0], [31.9, 287.0], [32.0, 287.0], [32.1, 287.0], [32.2, 287.0], [32.3, 288.0], [32.4, 288.0], [32.5, 288.0], [32.6, 288.0], [32.7, 288.0], [32.8, 288.0], [32.9, 288.0], [33.0, 288.0], [33.1, 288.0], [33.2, 288.0], [33.3, 288.0], [33.4, 288.0], [33.5, 288.0], [33.6, 289.0], [33.7, 289.0], [33.8, 289.0], [33.9, 289.0], [34.0, 289.0], [34.1, 289.0], [34.2, 289.0], [34.3, 289.0], [34.4, 289.0], [34.5, 290.0], [34.6, 290.0], [34.7, 290.0], [34.8, 290.0], [34.9, 290.0], [35.0, 290.0], [35.1, 290.0], [35.2, 290.0], [35.3, 290.0], [35.4, 290.0], [35.5, 290.0], [35.6, 290.0], [35.7, 290.0], [35.8, 291.0], [35.9, 291.0], [36.0, 291.0], [36.1, 291.0], [36.2, 291.0], [36.3, 291.0], [36.4, 291.0], [36.5, 291.0], [36.6, 291.0], [36.7, 291.0], [36.8, 291.0], [36.9, 292.0], [37.0, 292.0], [37.1, 292.0], [37.2, 292.0], [37.3, 292.0], [37.4, 292.0], [37.5, 292.0], [37.6, 292.0], [37.7, 292.0], [37.8, 292.0], [37.9, 292.0], [38.0, 292.0], [38.1, 293.0], [38.2, 293.0], [38.3, 293.0], [38.4, 293.0], [38.5, 293.0], [38.6, 293.0], [38.7, 293.0], [38.8, 293.0], [38.9, 293.0], [39.0, 293.0], [39.1, 294.0], [39.2, 294.0], [39.3, 294.0], [39.4, 294.0], [39.5, 294.0], [39.6, 294.0], [39.7, 294.0], [39.8, 294.0], [39.9, 294.0], [40.0, 294.0], [40.1, 294.0], [40.2, 294.0], [40.3, 294.0], [40.4, 295.0], [40.5, 295.0], [40.6, 295.0], [40.7, 295.0], [40.8, 295.0], [40.9, 295.0], [41.0, 295.0], [41.1, 295.0], [41.2, 295.0], [41.3, 295.0], [41.4, 295.0], [41.5, 295.0], [41.6, 295.0], [41.7, 295.0], [41.8, 296.0], [41.9, 296.0], [42.0, 296.0], [42.1, 296.0], [42.2, 296.0], [42.3, 296.0], [42.4, 296.0], [42.5, 296.0], [42.6, 296.0], [42.7, 296.0], [42.8, 296.0], [42.9, 296.0], [43.0, 297.0], [43.1, 297.0], [43.2, 297.0], [43.3, 297.0], [43.4, 297.0], [43.5, 297.0], [43.6, 297.0], [43.7, 297.0], [43.8, 297.0], [43.9, 297.0], [44.0, 297.0], [44.1, 297.0], [44.2, 297.0], [44.3, 298.0], [44.4, 298.0], [44.5, 298.0], [44.6, 298.0], [44.7, 298.0], [44.8, 298.0], [44.9, 298.0], [45.0, 298.0], [45.1, 298.0], [45.2, 299.0], [45.3, 299.0], [45.4, 299.0], [45.5, 299.0], [45.6, 299.0], [45.7, 299.0], [45.8, 299.0], [45.9, 299.0], [46.0, 299.0], [46.1, 299.0], [46.2, 299.0], [46.3, 299.0], [46.4, 300.0], [46.5, 300.0], [46.6, 300.0], [46.7, 300.0], [46.8, 300.0], [46.9, 300.0], [47.0, 300.0], [47.1, 300.0], [47.2, 300.0], [47.3, 300.0], [47.4, 301.0], [47.5, 301.0], [47.6, 301.0], [47.7, 301.0], [47.8, 301.0], [47.9, 301.0], [48.0, 301.0], [48.1, 301.0], [48.2, 301.0], [48.3, 301.0], [48.4, 301.0], [48.5, 301.0], [48.6, 302.0], [48.7, 302.0], [48.8, 302.0], [48.9, 302.0], [49.0, 302.0], [49.1, 302.0], [49.2, 302.0], [49.3, 302.0], [49.4, 302.0], [49.5, 302.0], [49.6, 303.0], [49.7, 303.0], [49.8, 303.0], [49.9, 303.0], [50.0, 303.0], [50.1, 303.0], [50.2, 303.0], [50.3, 303.0], [50.4, 303.0], [50.5, 303.0], [50.6, 303.0], [50.7, 304.0], [50.8, 304.0], [50.9, 304.0], [51.0, 304.0], [51.1, 304.0], [51.2, 304.0], [51.3, 304.0], [51.4, 304.0], [51.5, 304.0], [51.6, 305.0], [51.7, 305.0], [51.8, 305.0], [51.9, 305.0], [52.0, 305.0], [52.1, 305.0], [52.2, 305.0], [52.3, 305.0], [52.4, 305.0], [52.5, 305.0], [52.6, 305.0], [52.7, 306.0], [52.8, 306.0], [52.9, 306.0], [53.0, 306.0], [53.1, 306.0], [53.2, 306.0], [53.3, 306.0], [53.4, 306.0], [53.5, 306.0], [53.6, 306.0], [53.7, 306.0], [53.8, 307.0], [53.9, 307.0], [54.0, 307.0], [54.1, 307.0], [54.2, 307.0], [54.3, 307.0], [54.4, 307.0], [54.5, 307.0], [54.6, 307.0], [54.7, 308.0], [54.8, 308.0], [54.9, 308.0], [55.0, 308.0], [55.1, 308.0], [55.2, 308.0], [55.3, 308.0], [55.4, 308.0], [55.5, 308.0], [55.6, 308.0], [55.7, 308.0], [55.8, 309.0], [55.9, 309.0], [56.0, 309.0], [56.1, 309.0], [56.2, 309.0], [56.3, 309.0], [56.4, 309.0], [56.5, 309.0], [56.6, 310.0], [56.7, 310.0], [56.8, 310.0], [56.9, 310.0], [57.0, 310.0], [57.1, 310.0], [57.2, 310.0], [57.3, 310.0], [57.4, 310.0], [57.5, 310.0], [57.6, 311.0], [57.7, 311.0], [57.8, 311.0], [57.9, 311.0], [58.0, 311.0], [58.1, 311.0], [58.2, 311.0], [58.3, 311.0], [58.4, 311.0], [58.5, 311.0], [58.6, 312.0], [58.7, 312.0], [58.8, 312.0], [58.9, 312.0], [59.0, 312.0], [59.1, 312.0], [59.2, 312.0], [59.3, 312.0], [59.4, 312.0], [59.5, 312.0], [59.6, 313.0], [59.7, 313.0], [59.8, 313.0], [59.9, 313.0], [60.0, 313.0], [60.1, 313.0], [60.2, 313.0], [60.3, 314.0], [60.4, 314.0], [60.5, 314.0], [60.6, 314.0], [60.7, 314.0], [60.8, 314.0], [60.9, 315.0], [61.0, 315.0], [61.1, 315.0], [61.2, 315.0], [61.3, 315.0], [61.4, 315.0], [61.5, 315.0], [61.6, 315.0], [61.7, 315.0], [61.8, 315.0], [61.9, 316.0], [62.0, 316.0], [62.1, 316.0], [62.2, 316.0], [62.3, 316.0], [62.4, 316.0], [62.5, 316.0], [62.6, 316.0], [62.7, 317.0], [62.8, 317.0], [62.9, 317.0], [63.0, 317.0], [63.1, 317.0], [63.2, 317.0], [63.3, 317.0], [63.4, 317.0], [63.5, 317.0], [63.6, 317.0], [63.7, 318.0], [63.8, 318.0], [63.9, 318.0], [64.0, 318.0], [64.1, 318.0], [64.2, 318.0], [64.3, 318.0], [64.4, 318.0], [64.5, 318.0], [64.6, 319.0], [64.7, 319.0], [64.8, 319.0], [64.9, 319.0], [65.0, 319.0], [65.1, 319.0], [65.2, 319.0], [65.3, 319.0], [65.4, 319.0], [65.5, 319.0], [65.6, 320.0], [65.7, 320.0], [65.8, 320.0], [65.9, 320.0], [66.0, 320.0], [66.1, 320.0], [66.2, 320.0], [66.3, 321.0], [66.4, 321.0], [66.5, 321.0], [66.6, 321.0], [66.7, 321.0], [66.8, 321.0], [66.9, 321.0], [67.0, 321.0], [67.1, 321.0], [67.2, 322.0], [67.3, 322.0], [67.4, 322.0], [67.5, 322.0], [67.6, 322.0], [67.7, 322.0], [67.8, 322.0], [67.9, 322.0], [68.0, 322.0], [68.1, 323.0], [68.2, 323.0], [68.3, 323.0], [68.4, 323.0], [68.5, 323.0], [68.6, 323.0], [68.7, 323.0], [68.8, 323.0], [68.9, 323.0], [69.0, 323.0], [69.1, 324.0], [69.2, 324.0], [69.3, 324.0], [69.4, 324.0], [69.5, 324.0], [69.6, 324.0], [69.7, 324.0], [69.8, 324.0], [69.9, 324.0], [70.0, 324.0], [70.1, 325.0], [70.2, 325.0], [70.3, 325.0], [70.4, 325.0], [70.5, 325.0], [70.6, 325.0], [70.7, 325.0], [70.8, 325.0], [70.9, 326.0], [71.0, 326.0], [71.1, 326.0], [71.2, 326.0], [71.3, 326.0], [71.4, 326.0], [71.5, 326.0], [71.6, 327.0], [71.7, 327.0], [71.8, 327.0], [71.9, 327.0], [72.0, 327.0], [72.1, 327.0], [72.2, 327.0], [72.3, 328.0], [72.4, 328.0], [72.5, 328.0], [72.6, 328.0], [72.7, 328.0], [72.8, 328.0], [72.9, 329.0], [73.0, 329.0], [73.1, 329.0], [73.2, 329.0], [73.3, 329.0], [73.4, 329.0], [73.5, 329.0], [73.6, 330.0], [73.7, 330.0], [73.8, 330.0], [73.9, 330.0], [74.0, 330.0], [74.1, 330.0], [74.2, 331.0], [74.3, 331.0], [74.4, 331.0], [74.5, 331.0], [74.6, 331.0], [74.7, 331.0], [74.8, 332.0], [74.9, 332.0], [75.0, 332.0], [75.1, 332.0], [75.2, 332.0], [75.3, 332.0], [75.4, 332.0], [75.5, 332.0], [75.6, 333.0], [75.7, 333.0], [75.8, 333.0], [75.9, 333.0], [76.0, 333.0], [76.1, 333.0], [76.2, 333.0], [76.3, 334.0], [76.4, 334.0], [76.5, 334.0], [76.6, 334.0], [76.7, 334.0], [76.8, 334.0], [76.9, 335.0], [77.0, 335.0], [77.1, 335.0], [77.2, 335.0], [77.3, 335.0], [77.4, 335.0], [77.5, 336.0], [77.6, 336.0], [77.7, 336.0], [77.8, 336.0], [77.9, 336.0], [78.0, 336.0], [78.1, 336.0], [78.2, 336.0], [78.3, 337.0], [78.4, 337.0], [78.5, 337.0], [78.6, 337.0], [78.7, 337.0], [78.8, 337.0], [78.9, 338.0], [79.0, 338.0], [79.1, 338.0], [79.2, 338.0], [79.3, 338.0], [79.4, 339.0], [79.5, 339.0], [79.6, 339.0], [79.7, 339.0], [79.8, 340.0], [79.9, 340.0], [80.0, 340.0], [80.1, 340.0], [80.2, 340.0], [80.3, 340.0], [80.4, 341.0], [80.5, 341.0], [80.6, 341.0], [80.7, 341.0], [80.8, 341.0], [80.9, 342.0], [81.0, 342.0], [81.1, 342.0], [81.2, 342.0], [81.3, 342.0], [81.4, 343.0], [81.5, 343.0], [81.6, 343.0], [81.7, 343.0], [81.8, 343.0], [81.9, 343.0], [82.0, 344.0], [82.1, 344.0], [82.2, 344.0], [82.3, 344.0], [82.4, 345.0], [82.5, 345.0], [82.6, 345.0], [82.7, 345.0], [82.8, 346.0], [82.9, 346.0], [83.0, 346.0], [83.1, 346.0], [83.2, 347.0], [83.3, 347.0], [83.4, 347.0], [83.5, 347.0], [83.6, 347.0], [83.7, 347.0], [83.8, 347.0], [83.9, 348.0], [84.0, 348.0], [84.1, 348.0], [84.2, 348.0], [84.3, 349.0], [84.4, 349.0], [84.5, 349.0], [84.6, 349.0], [84.7, 349.0], [84.8, 350.0], [84.9, 350.0], [85.0, 350.0], [85.1, 350.0], [85.2, 350.0], [85.3, 351.0], [85.4, 351.0], [85.5, 351.0], [85.6, 351.0], [85.7, 352.0], [85.8, 352.0], [85.9, 352.0], [86.0, 352.0], [86.1, 353.0], [86.2, 353.0], [86.3, 353.0], [86.4, 353.0], [86.5, 354.0], [86.6, 354.0], [86.7, 354.0], [86.8, 355.0], [86.9, 355.0], [87.0, 355.0], [87.1, 355.0], [87.2, 356.0], [87.3, 356.0], [87.4, 356.0], [87.5, 357.0], [87.6, 357.0], [87.7, 357.0], [87.8, 357.0], [87.9, 357.0], [88.0, 357.0], [88.1, 358.0], [88.2, 358.0], [88.3, 359.0], [88.4, 359.0], [88.5, 359.0], [88.6, 359.0], [88.7, 360.0], [88.8, 360.0], [88.9, 360.0], [89.0, 360.0], [89.1, 360.0], [89.2, 361.0], [89.3, 361.0], [89.4, 362.0], [89.5, 362.0], [89.6, 362.0], [89.7, 363.0], [89.8, 363.0], [89.9, 363.0], [90.0, 364.0], [90.1, 364.0], [90.2, 364.0], [90.3, 365.0], [90.4, 365.0], [90.5, 366.0], [90.6, 366.0], [90.7, 366.0], [90.8, 367.0], [90.9, 367.0], [91.0, 368.0], [91.1, 368.0], [91.2, 369.0], [91.3, 369.0], [91.4, 369.0], [91.5, 370.0], [91.6, 370.0], [91.7, 371.0], [91.8, 371.0], [91.9, 372.0], [92.0, 373.0], [92.1, 373.0], [92.2, 373.0], [92.3, 374.0], [92.4, 376.0], [92.5, 376.0], [92.6, 377.0], [92.7, 377.0], [92.8, 379.0], [92.9, 379.0], [93.0, 380.0], [93.1, 381.0], [93.2, 381.0], [93.3, 382.0], [93.4, 382.0], [93.5, 382.0], [93.6, 383.0], [93.7, 384.0], [93.8, 384.0], [93.9, 385.0], [94.0, 386.0], [94.1, 387.0], [94.2, 388.0], [94.3, 389.0], [94.4, 390.0], [94.5, 390.0], [94.6, 391.0], [94.7, 392.0], [94.8, 393.0], [94.9, 394.0], [95.0, 395.0], [95.1, 396.0], [95.2, 396.0], [95.3, 397.0], [95.4, 399.0], [95.5, 399.0], [95.6, 400.0], [95.7, 401.0], [95.8, 402.0], [95.9, 403.0], [96.0, 404.0], [96.1, 405.0], [96.2, 407.0], [96.3, 407.0], [96.4, 408.0], [96.5, 409.0], [96.6, 410.0], [96.7, 412.0], [96.8, 414.0], [96.9, 416.0], [97.0, 418.0], [97.1, 420.0], [97.2, 421.0], [97.3, 423.0], [97.4, 426.0], [97.5, 429.0], [97.6, 430.0], [97.7, 432.0], [97.8, 433.0], [97.9, 436.0], [98.0, 439.0], [98.1, 441.0], [98.2, 445.0], [98.3, 448.0], [98.4, 454.0], [98.5, 457.0], [98.6, 461.0], [98.7, 464.0], [98.8, 472.0], [98.9, 477.0], [99.0, 483.0], [99.1, 490.0], [99.2, 496.0], [99.3, 507.0], [99.4, 520.0], [99.5, 535.0], [99.6, 568.0], [99.7, 607.0], [99.8, 665.0], [99.9, 769.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 700.0], [0.1, 723.0], [0.2, 731.0], [0.3, 737.0], [0.4, 739.0], [0.5, 741.0], [0.6, 745.0], [0.7, 750.0], [0.8, 751.0], [0.9, 754.0], [1.0, 755.0], [1.1, 757.0], [1.2, 758.0], [1.3, 760.0], [1.4, 762.0], [1.5, 765.0], [1.6, 766.0], [1.7, 767.0], [1.8, 768.0], [1.9, 770.0], [2.0, 771.0], [2.1, 773.0], [2.2, 774.0], [2.3, 775.0], [2.4, 776.0], [2.5, 777.0], [2.6, 778.0], [2.7, 778.0], [2.8, 779.0], [2.9, 780.0], [3.0, 781.0], [3.1, 782.0], [3.2, 783.0], [3.3, 785.0], [3.4, 785.0], [3.5, 786.0], [3.6, 787.0], [3.7, 787.0], [3.8, 788.0], [3.9, 789.0], [4.0, 790.0], [4.1, 791.0], [4.2, 792.0], [4.3, 793.0], [4.4, 795.0], [4.5, 795.0], [4.6, 796.0], [4.7, 797.0], [4.8, 798.0], [4.9, 798.0], [5.0, 799.0], [5.1, 800.0], [5.2, 801.0], [5.3, 801.0], [5.4, 802.0], [5.5, 803.0], [5.6, 804.0], [5.7, 805.0], [5.8, 805.0], [5.9, 806.0], [6.0, 806.0], [6.1, 807.0], [6.2, 808.0], [6.3, 809.0], [6.4, 810.0], [6.5, 811.0], [6.6, 811.0], [6.7, 812.0], [6.8, 812.0], [6.9, 813.0], [7.0, 814.0], [7.1, 815.0], [7.2, 815.0], [7.3, 816.0], [7.4, 816.0], [7.5, 817.0], [7.6, 818.0], [7.7, 818.0], [7.8, 819.0], [7.9, 819.0], [8.0, 820.0], [8.1, 821.0], [8.2, 822.0], [8.3, 822.0], [8.4, 822.0], [8.5, 824.0], [8.6, 824.0], [8.7, 825.0], [8.8, 825.0], [8.9, 826.0], [9.0, 826.0], [9.1, 827.0], [9.2, 828.0], [9.3, 828.0], [9.4, 829.0], [9.5, 829.0], [9.6, 830.0], [9.7, 830.0], [9.8, 831.0], [9.9, 831.0], [10.0, 831.0], [10.1, 832.0], [10.2, 833.0], [10.3, 833.0], [10.4, 834.0], [10.5, 835.0], [10.6, 835.0], [10.7, 836.0], [10.8, 837.0], [10.9, 837.0], [11.0, 837.0], [11.1, 839.0], [11.2, 839.0], [11.3, 840.0], [11.4, 840.0], [11.5, 841.0], [11.6, 842.0], [11.7, 842.0], [11.8, 843.0], [11.9, 843.0], [12.0, 844.0], [12.1, 844.0], [12.2, 844.0], [12.3, 845.0], [12.4, 845.0], [12.5, 846.0], [12.6, 846.0], [12.7, 847.0], [12.8, 847.0], [12.9, 848.0], [13.0, 848.0], [13.1, 849.0], [13.2, 849.0], [13.3, 850.0], [13.4, 850.0], [13.5, 851.0], [13.6, 851.0], [13.7, 852.0], [13.8, 852.0], [13.9, 853.0], [14.0, 853.0], [14.1, 854.0], [14.2, 854.0], [14.3, 854.0], [14.4, 855.0], [14.5, 856.0], [14.6, 856.0], [14.7, 857.0], [14.8, 857.0], [14.9, 858.0], [15.0, 858.0], [15.1, 859.0], [15.2, 859.0], [15.3, 860.0], [15.4, 861.0], [15.5, 861.0], [15.6, 862.0], [15.7, 862.0], [15.8, 863.0], [15.9, 864.0], [16.0, 865.0], [16.1, 865.0], [16.2, 866.0], [16.3, 867.0], [16.4, 867.0], [16.5, 868.0], [16.6, 869.0], [16.7, 869.0], [16.8, 870.0], [16.9, 870.0], [17.0, 871.0], [17.1, 871.0], [17.2, 872.0], [17.3, 872.0], [17.4, 873.0], [17.5, 873.0], [17.6, 874.0], [17.7, 874.0], [17.8, 875.0], [17.9, 876.0], [18.0, 876.0], [18.1, 877.0], [18.2, 877.0], [18.3, 878.0], [18.4, 879.0], [18.5, 879.0], [18.6, 880.0], [18.7, 880.0], [18.8, 880.0], [18.9, 880.0], [19.0, 881.0], [19.1, 881.0], [19.2, 882.0], [19.3, 882.0], [19.4, 883.0], [19.5, 883.0], [19.6, 884.0], [19.7, 884.0], [19.8, 885.0], [19.9, 885.0], [20.0, 886.0], [20.1, 886.0], [20.2, 887.0], [20.3, 887.0], [20.4, 888.0], [20.5, 889.0], [20.6, 889.0], [20.7, 889.0], [20.8, 890.0], [20.9, 890.0], [21.0, 891.0], [21.1, 891.0], [21.2, 892.0], [21.3, 892.0], [21.4, 893.0], [21.5, 894.0], [21.6, 894.0], [21.7, 895.0], [21.8, 895.0], [21.9, 896.0], [22.0, 896.0], [22.1, 897.0], [22.2, 897.0], [22.3, 897.0], [22.4, 898.0], [22.5, 898.0], [22.6, 898.0], [22.7, 899.0], [22.8, 900.0], [22.9, 900.0], [23.0, 901.0], [23.1, 902.0], [23.2, 902.0], [23.3, 903.0], [23.4, 903.0], [23.5, 903.0], [23.6, 904.0], [23.7, 904.0], [23.8, 905.0], [23.9, 905.0], [24.0, 906.0], [24.1, 906.0], [24.2, 907.0], [24.3, 907.0], [24.4, 907.0], [24.5, 908.0], [24.6, 908.0], [24.7, 909.0], [24.8, 910.0], [24.9, 911.0], [25.0, 911.0], [25.1, 911.0], [25.2, 912.0], [25.3, 912.0], [25.4, 913.0], [25.5, 913.0], [25.6, 914.0], [25.7, 914.0], [25.8, 914.0], [25.9, 915.0], [26.0, 915.0], [26.1, 916.0], [26.2, 916.0], [26.3, 917.0], [26.4, 917.0], [26.5, 917.0], [26.6, 918.0], [26.7, 918.0], [26.8, 918.0], [26.9, 919.0], [27.0, 919.0], [27.1, 920.0], [27.2, 920.0], [27.3, 920.0], [27.4, 921.0], [27.5, 921.0], [27.6, 922.0], [27.7, 922.0], [27.8, 922.0], [27.9, 923.0], [28.0, 923.0], [28.1, 924.0], [28.2, 924.0], [28.3, 924.0], [28.4, 925.0], [28.5, 925.0], [28.6, 926.0], [28.7, 926.0], [28.8, 927.0], [28.9, 927.0], [29.0, 928.0], [29.1, 929.0], [29.2, 929.0], [29.3, 929.0], [29.4, 929.0], [29.5, 930.0], [29.6, 930.0], [29.7, 931.0], [29.8, 931.0], [29.9, 932.0], [30.0, 932.0], [30.1, 933.0], [30.2, 933.0], [30.3, 934.0], [30.4, 934.0], [30.5, 934.0], [30.6, 935.0], [30.7, 936.0], [30.8, 936.0], [30.9, 936.0], [31.0, 937.0], [31.1, 938.0], [31.2, 938.0], [31.3, 938.0], [31.4, 939.0], [31.5, 939.0], [31.6, 940.0], [31.7, 940.0], [31.8, 941.0], [31.9, 941.0], [32.0, 942.0], [32.1, 942.0], [32.2, 942.0], [32.3, 943.0], [32.4, 943.0], [32.5, 944.0], [32.6, 944.0], [32.7, 945.0], [32.8, 946.0], [32.9, 946.0], [33.0, 946.0], [33.1, 947.0], [33.2, 947.0], [33.3, 948.0], [33.4, 948.0], [33.5, 949.0], [33.6, 949.0], [33.7, 950.0], [33.8, 951.0], [33.9, 952.0], [34.0, 952.0], [34.1, 953.0], [34.2, 953.0], [34.3, 953.0], [34.4, 954.0], [34.5, 954.0], [34.6, 955.0], [34.7, 955.0], [34.8, 955.0], [34.9, 956.0], [35.0, 956.0], [35.1, 957.0], [35.2, 957.0], [35.3, 958.0], [35.4, 958.0], [35.5, 959.0], [35.6, 959.0], [35.7, 959.0], [35.8, 960.0], [35.9, 960.0], [36.0, 961.0], [36.1, 961.0], [36.2, 962.0], [36.3, 962.0], [36.4, 963.0], [36.5, 963.0], [36.6, 964.0], [36.7, 964.0], [36.8, 965.0], [36.9, 965.0], [37.0, 965.0], [37.1, 966.0], [37.2, 966.0], [37.3, 967.0], [37.4, 967.0], [37.5, 968.0], [37.6, 969.0], [37.7, 969.0], [37.8, 970.0], [37.9, 970.0], [38.0, 970.0], [38.1, 971.0], [38.2, 971.0], [38.3, 972.0], [38.4, 972.0], [38.5, 973.0], [38.6, 973.0], [38.7, 973.0], [38.8, 974.0], [38.9, 974.0], [39.0, 974.0], [39.1, 975.0], [39.2, 975.0], [39.3, 976.0], [39.4, 976.0], [39.5, 977.0], [39.6, 977.0], [39.7, 978.0], [39.8, 978.0], [39.9, 978.0], [40.0, 978.0], [40.1, 979.0], [40.2, 979.0], [40.3, 980.0], [40.4, 981.0], [40.5, 981.0], [40.6, 982.0], [40.7, 982.0], [40.8, 983.0], [40.9, 983.0], [41.0, 984.0], [41.1, 984.0], [41.2, 985.0], [41.3, 985.0], [41.4, 985.0], [41.5, 986.0], [41.6, 986.0], [41.7, 987.0], [41.8, 987.0], [41.9, 988.0], [42.0, 988.0], [42.1, 989.0], [42.2, 990.0], [42.3, 990.0], [42.4, 991.0], [42.5, 991.0], [42.6, 991.0], [42.7, 992.0], [42.8, 992.0], [42.9, 992.0], [43.0, 993.0], [43.1, 993.0], [43.2, 994.0], [43.3, 994.0], [43.4, 995.0], [43.5, 995.0], [43.6, 995.0], [43.7, 996.0], [43.8, 996.0], [43.9, 997.0], [44.0, 997.0], [44.1, 997.0], [44.2, 998.0], [44.3, 999.0], [44.4, 999.0], [44.5, 1000.0], [44.6, 1000.0], [44.7, 1001.0], [44.8, 1001.0], [44.9, 1001.0], [45.0, 1002.0], [45.1, 1002.0], [45.2, 1003.0], [45.3, 1003.0], [45.4, 1004.0], [45.5, 1004.0], [45.6, 1005.0], [45.7, 1005.0], [45.8, 1005.0], [45.9, 1006.0], [46.0, 1006.0], [46.1, 1007.0], [46.2, 1007.0], [46.3, 1008.0], [46.4, 1008.0], [46.5, 1009.0], [46.6, 1009.0], [46.7, 1009.0], [46.8, 1010.0], [46.9, 1010.0], [47.0, 1011.0], [47.1, 1011.0], [47.2, 1012.0], [47.3, 1012.0], [47.4, 1012.0], [47.5, 1013.0], [47.6, 1014.0], [47.7, 1014.0], [47.8, 1014.0], [47.9, 1015.0], [48.0, 1015.0], [48.1, 1016.0], [48.2, 1016.0], [48.3, 1017.0], [48.4, 1017.0], [48.5, 1017.0], [48.6, 1018.0], [48.7, 1018.0], [48.8, 1019.0], [48.9, 1019.0], [49.0, 1020.0], [49.1, 1020.0], [49.2, 1020.0], [49.3, 1021.0], [49.4, 1021.0], [49.5, 1022.0], [49.6, 1022.0], [49.7, 1022.0], [49.8, 1023.0], [49.9, 1024.0], [50.0, 1024.0], [50.1, 1024.0], [50.2, 1025.0], [50.3, 1025.0], [50.4, 1025.0], [50.5, 1026.0], [50.6, 1026.0], [50.7, 1027.0], [50.8, 1028.0], [50.9, 1028.0], [51.0, 1029.0], [51.1, 1029.0], [51.2, 1030.0], [51.3, 1031.0], [51.4, 1031.0], [51.5, 1032.0], [51.6, 1032.0], [51.7, 1033.0], [51.8, 1033.0], [51.9, 1034.0], [52.0, 1034.0], [52.1, 1034.0], [52.2, 1035.0], [52.3, 1035.0], [52.4, 1035.0], [52.5, 1036.0], [52.6, 1036.0], [52.7, 1037.0], [52.8, 1037.0], [52.9, 1038.0], [53.0, 1038.0], [53.1, 1039.0], [53.2, 1039.0], [53.3, 1040.0], [53.4, 1040.0], [53.5, 1041.0], [53.6, 1041.0], [53.7, 1042.0], [53.8, 1042.0], [53.9, 1043.0], [54.0, 1044.0], [54.1, 1044.0], [54.2, 1045.0], [54.3, 1045.0], [54.4, 1046.0], [54.5, 1046.0], [54.6, 1046.0], [54.7, 1047.0], [54.8, 1047.0], [54.9, 1048.0], [55.0, 1049.0], [55.1, 1049.0], [55.2, 1050.0], [55.3, 1050.0], [55.4, 1050.0], [55.5, 1051.0], [55.6, 1052.0], [55.7, 1052.0], [55.8, 1053.0], [55.9, 1054.0], [56.0, 1055.0], [56.1, 1055.0], [56.2, 1056.0], [56.3, 1056.0], [56.4, 1057.0], [56.5, 1058.0], [56.6, 1058.0], [56.7, 1059.0], [56.8, 1059.0], [56.9, 1060.0], [57.0, 1060.0], [57.1, 1061.0], [57.2, 1062.0], [57.3, 1062.0], [57.4, 1063.0], [57.5, 1063.0], [57.6, 1064.0], [57.7, 1064.0], [57.8, 1065.0], [57.9, 1066.0], [58.0, 1066.0], [58.1, 1067.0], [58.2, 1068.0], [58.3, 1068.0], [58.4, 1069.0], [58.5, 1069.0], [58.6, 1070.0], [58.7, 1070.0], [58.8, 1071.0], [58.9, 1072.0], [59.0, 1072.0], [59.1, 1073.0], [59.2, 1073.0], [59.3, 1074.0], [59.4, 1074.0], [59.5, 1075.0], [59.6, 1076.0], [59.7, 1076.0], [59.8, 1076.0], [59.9, 1077.0], [60.0, 1078.0], [60.1, 1078.0], [60.2, 1079.0], [60.3, 1080.0], [60.4, 1080.0], [60.5, 1081.0], [60.6, 1081.0], [60.7, 1082.0], [60.8, 1083.0], [60.9, 1084.0], [61.0, 1085.0], [61.1, 1086.0], [61.2, 1086.0], [61.3, 1087.0], [61.4, 1087.0], [61.5, 1087.0], [61.6, 1088.0], [61.7, 1089.0], [61.8, 1089.0], [61.9, 1090.0], [62.0, 1091.0], [62.1, 1091.0], [62.2, 1092.0], [62.3, 1093.0], [62.4, 1093.0], [62.5, 1093.0], [62.6, 1094.0], [62.7, 1095.0], [62.8, 1096.0], [62.9, 1096.0], [63.0, 1097.0], [63.1, 1098.0], [63.2, 1099.0], [63.3, 1099.0], [63.4, 1100.0], [63.5, 1101.0], [63.6, 1101.0], [63.7, 1102.0], [63.8, 1103.0], [63.9, 1104.0], [64.0, 1105.0], [64.1, 1105.0], [64.2, 1106.0], [64.3, 1107.0], [64.4, 1107.0], [64.5, 1108.0], [64.6, 1108.0], [64.7, 1109.0], [64.8, 1110.0], [64.9, 1111.0], [65.0, 1111.0], [65.1, 1112.0], [65.2, 1113.0], [65.3, 1113.0], [65.4, 1114.0], [65.5, 1114.0], [65.6, 1115.0], [65.7, 1115.0], [65.8, 1116.0], [65.9, 1117.0], [66.0, 1117.0], [66.1, 1118.0], [66.2, 1119.0], [66.3, 1119.0], [66.4, 1120.0], [66.5, 1120.0], [66.6, 1121.0], [66.7, 1121.0], [66.8, 1122.0], [66.9, 1123.0], [67.0, 1124.0], [67.1, 1125.0], [67.2, 1125.0], [67.3, 1126.0], [67.4, 1127.0], [67.5, 1128.0], [67.6, 1129.0], [67.7, 1129.0], [67.8, 1130.0], [67.9, 1131.0], [68.0, 1132.0], [68.1, 1132.0], [68.2, 1133.0], [68.3, 1134.0], [68.4, 1135.0], [68.5, 1136.0], [68.6, 1136.0], [68.7, 1137.0], [68.8, 1138.0], [68.9, 1139.0], [69.0, 1139.0], [69.1, 1140.0], [69.2, 1141.0], [69.3, 1141.0], [69.4, 1143.0], [69.5, 1143.0], [69.6, 1144.0], [69.7, 1145.0], [69.8, 1146.0], [69.9, 1147.0], [70.0, 1148.0], [70.1, 1149.0], [70.2, 1150.0], [70.3, 1151.0], [70.4, 1151.0], [70.5, 1152.0], [70.6, 1153.0], [70.7, 1155.0], [70.8, 1155.0], [70.9, 1156.0], [71.0, 1158.0], [71.1, 1158.0], [71.2, 1159.0], [71.3, 1160.0], [71.4, 1161.0], [71.5, 1161.0], [71.6, 1162.0], [71.7, 1163.0], [71.8, 1164.0], [71.9, 1165.0], [72.0, 1166.0], [72.1, 1166.0], [72.2, 1168.0], [72.3, 1168.0], [72.4, 1169.0], [72.5, 1170.0], [72.6, 1171.0], [72.7, 1172.0], [72.8, 1174.0], [72.9, 1175.0], [73.0, 1176.0], [73.1, 1177.0], [73.2, 1178.0], [73.3, 1179.0], [73.4, 1180.0], [73.5, 1181.0], [73.6, 1181.0], [73.7, 1183.0], [73.8, 1183.0], [73.9, 1184.0], [74.0, 1186.0], [74.1, 1187.0], [74.2, 1187.0], [74.3, 1188.0], [74.4, 1190.0], [74.5, 1190.0], [74.6, 1191.0], [74.7, 1193.0], [74.8, 1194.0], [74.9, 1195.0], [75.0, 1196.0], [75.1, 1197.0], [75.2, 1200.0], [75.3, 1200.0], [75.4, 1202.0], [75.5, 1203.0], [75.6, 1204.0], [75.7, 1205.0], [75.8, 1206.0], [75.9, 1207.0], [76.0, 1208.0], [76.1, 1209.0], [76.2, 1210.0], [76.3, 1212.0], [76.4, 1214.0], [76.5, 1215.0], [76.6, 1216.0], [76.7, 1217.0], [76.8, 1219.0], [76.9, 1220.0], [77.0, 1221.0], [77.1, 1223.0], [77.2, 1225.0], [77.3, 1226.0], [77.4, 1227.0], [77.5, 1228.0], [77.6, 1229.0], [77.7, 1231.0], [77.8, 1233.0], [77.9, 1234.0], [78.0, 1236.0], [78.1, 1238.0], [78.2, 1241.0], [78.3, 1242.0], [78.4, 1244.0], [78.5, 1245.0], [78.6, 1246.0], [78.7, 1248.0], [78.8, 1248.0], [78.9, 1251.0], [79.0, 1253.0], [79.1, 1254.0], [79.2, 1255.0], [79.3, 1257.0], [79.4, 1258.0], [79.5, 1259.0], [79.6, 1261.0], [79.7, 1263.0], [79.8, 1266.0], [79.9, 1268.0], [80.0, 1270.0], [80.1, 1270.0], [80.2, 1273.0], [80.3, 1275.0], [80.4, 1278.0], [80.5, 1280.0], [80.6, 1282.0], [80.7, 1283.0], [80.8, 1284.0], [80.9, 1287.0], [81.0, 1288.0], [81.1, 1290.0], [81.2, 1293.0], [81.3, 1295.0], [81.4, 1297.0], [81.5, 1300.0], [81.6, 1302.0], [81.7, 1304.0], [81.8, 1306.0], [81.9, 1308.0], [82.0, 1310.0], [82.1, 1312.0], [82.2, 1315.0], [82.3, 1319.0], [82.4, 1323.0], [82.5, 1326.0], [82.6, 1332.0], [82.7, 1336.0], [82.8, 1339.0], [82.9, 1340.0], [83.0, 1342.0], [83.1, 1346.0], [83.2, 1348.0], [83.3, 1350.0], [83.4, 1353.0], [83.5, 1355.0], [83.6, 1359.0], [83.7, 1365.0], [83.8, 1366.0], [83.9, 1369.0], [84.0, 1372.0], [84.1, 1376.0], [84.2, 1381.0], [84.3, 1386.0], [84.4, 1390.0], [84.5, 1392.0], [84.6, 1398.0], [84.7, 1400.0], [84.8, 1407.0], [84.9, 1413.0], [85.0, 1419.0], [85.1, 1424.0], [85.2, 1429.0], [85.3, 1435.0], [85.4, 1439.0], [85.5, 1447.0], [85.6, 1453.0], [85.7, 1462.0], [85.8, 1467.0], [85.9, 1473.0], [86.0, 1486.0], [86.1, 1493.0], [86.2, 1499.0], [86.3, 1506.0], [86.4, 1518.0], [86.5, 1524.0], [86.6, 1529.0], [86.7, 1543.0], [86.8, 1554.0], [86.9, 1560.0], [87.0, 1568.0], [87.1, 1576.0], [87.2, 1589.0], [87.3, 1598.0], [87.4, 1607.0], [87.5, 1616.0], [87.6, 1629.0], [87.7, 1639.0], [87.8, 1648.0], [87.9, 1662.0], [88.0, 1675.0], [88.1, 1699.0], [88.2, 1709.0], [88.3, 1724.0], [88.4, 1738.0], [88.5, 1756.0], [88.6, 1771.0], [88.7, 1783.0], [88.8, 1799.0], [88.9, 1817.0], [89.0, 1832.0], [89.1, 1849.0], [89.2, 1870.0], [89.3, 1887.0], [89.4, 1927.0], [89.5, 1951.0], [89.6, 1980.0], [89.7, 2005.0], [89.8, 2028.0], [89.9, 2050.0], [90.0, 2086.0], [90.1, 2101.0], [90.2, 2119.0], [90.3, 2166.0], [90.4, 2187.0], [90.5, 2216.0], [90.6, 2237.0], [90.7, 2280.0], [90.8, 2306.0], [90.9, 2333.0], [91.0, 2358.0], [91.1, 2380.0], [91.2, 2414.0], [91.3, 2425.0], [91.4, 2452.0], [91.5, 2478.0], [91.6, 2506.0], [91.7, 2541.0], [91.8, 2569.0], [91.9, 2602.0], [92.0, 2628.0], [92.1, 2666.0], [92.2, 2708.0], [92.3, 2738.0], [92.4, 2783.0], [92.5, 2821.0], [92.6, 2848.0], [92.7, 2882.0], [92.8, 2927.0], [92.9, 2958.0], [93.0, 2999.0], [93.1, 3030.0], [93.2, 3059.0], [93.3, 3087.0], [93.4, 3117.0], [93.5, 3173.0], [93.6, 3198.0], [93.7, 3235.0], [93.8, 3303.0], [93.9, 3368.0], [94.0, 3395.0], [94.1, 3440.0], [94.2, 3470.0], [94.3, 3502.0], [94.4, 3530.0], [94.5, 3582.0], [94.6, 3633.0], [94.7, 3704.0], [94.8, 3761.0], [94.9, 3832.0], [95.0, 3863.0], [95.1, 3890.0], [95.2, 3926.0], [95.3, 3980.0], [95.4, 4042.0], [95.5, 4093.0], [95.6, 4153.0], [95.7, 4199.0], [95.8, 4253.0], [95.9, 4288.0], [96.0, 4364.0], [96.1, 4442.0], [96.2, 4488.0], [96.3, 4532.0], [96.4, 4608.0], [96.5, 4708.0], [96.6, 4845.0], [96.7, 4952.0], [96.8, 5060.0], [96.9, 5161.0], [97.0, 5215.0], [97.1, 5281.0], [97.2, 5373.0], [97.3, 5434.0], [97.4, 5499.0], [97.5, 5647.0], [97.6, 5795.0], [97.7, 5880.0], [97.8, 6003.0], [97.9, 6123.0], [98.0, 6251.0], [98.1, 6396.0], [98.2, 6591.0], [98.3, 6793.0], [98.4, 7032.0], [98.5, 7220.0], [98.6, 7324.0], [98.7, 7783.0], [98.8, 8100.0], [98.9, 8504.0], [99.0, 8814.0], [99.1, 9126.0], [99.2, 9392.0], [99.3, 10209.0], [99.4, 10802.0], [99.5, 11239.0], [99.6, 11944.0], [99.7, 13556.0], [99.8, 15563.0], [99.9, 19311.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 4518.0, "series": [{"data": [[400.0, 247.0], [500.0, 1828.0], [600.0, 2379.0], [700.0, 1720.0], [800.0, 987.0], [900.0, 463.0], [1000.0, 213.0], [1100.0, 117.0], [1200.0, 77.0], [1300.0, 83.0], [1400.0, 50.0], [1500.0, 52.0], [1600.0, 29.0], [1700.0, 25.0], [1800.0, 39.0], [1900.0, 35.0], [2000.0, 33.0], [2100.0, 38.0], [2200.0, 28.0], [2300.0, 27.0], [2400.0, 25.0], [2500.0, 21.0], [2600.0, 27.0], [2700.0, 27.0], [2800.0, 28.0], [2900.0, 18.0], [3000.0, 22.0], [3100.0, 24.0], [3200.0, 23.0], [3300.0, 17.0], [3400.0, 14.0], [3500.0, 22.0], [3600.0, 20.0], [3700.0, 10.0], [3800.0, 22.0], [3900.0, 22.0], [4000.0, 13.0], [4100.0, 14.0], [4300.0, 7.0], [4200.0, 17.0], [4500.0, 9.0], [4600.0, 9.0], [4400.0, 4.0], [4800.0, 11.0], [4700.0, 11.0], [5100.0, 14.0], [5000.0, 8.0], [4900.0, 16.0], [5300.0, 8.0], [5200.0, 7.0], [5600.0, 10.0], [5400.0, 8.0], [5500.0, 5.0], [5800.0, 8.0], [5700.0, 5.0], [5900.0, 8.0], [6000.0, 6.0], [6100.0, 5.0], [6200.0, 5.0], [6300.0, 4.0], [6500.0, 6.0], [6600.0, 5.0], [6400.0, 5.0], [6800.0, 5.0], [6900.0, 5.0], [6700.0, 3.0], [7100.0, 5.0], [7000.0, 4.0], [7300.0, 1.0], [7400.0, 1.0], [7200.0, 1.0], [7500.0, 2.0], [7600.0, 6.0], [7800.0, 1.0], [7700.0, 2.0], [7900.0, 2.0], [8100.0, 3.0], [8000.0, 2.0], [8500.0, 5.0], [8200.0, 2.0], [8300.0, 4.0], [8400.0, 4.0], [8600.0, 2.0], [8700.0, 2.0], [9000.0, 2.0], [8900.0, 3.0], [9100.0, 1.0], [8800.0, 4.0], [9200.0, 1.0], [9400.0, 2.0], [9300.0, 2.0], [9900.0, 2.0], [9800.0, 3.0], [10000.0, 2.0], [10100.0, 1.0], [10200.0, 1.0], [10700.0, 3.0], [10600.0, 3.0], [10500.0, 1.0], [10400.0, 2.0], [11100.0, 3.0], [10900.0, 4.0], [11000.0, 1.0], [10800.0, 2.0], [11500.0, 2.0], [11700.0, 2.0], [11600.0, 2.0], [11900.0, 1.0], [12600.0, 1.0], [12500.0, 1.0], [13200.0, 1.0], [12800.0, 1.0], [13000.0, 1.0], [14400.0, 2.0], [14500.0, 1.0], [14700.0, 1.0], [14800.0, 1.0], [15200.0, 2.0], [15100.0, 1.0], [15000.0, 1.0], [15500.0, 1.0], [16800.0, 1.0], [17900.0, 1.0], [18000.0, 1.0], [17700.0, 1.0], [19100.0, 1.0], [18600.0, 1.0], [18700.0, 2.0], [19000.0, 2.0], [19300.0, 1.0], [19800.0, 2.0], [21300.0, 1.0], [20700.0, 1.0], [20600.0, 1.0], [20900.0, 1.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[300.0, 4518.0], [600.0, 13.0], [700.0, 12.0], [400.0, 342.0], [200.0, 4257.0], [800.0, 4.0], [900.0, 1.0], [500.0, 37.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[700.0, 465.0], [800.0, 1626.0], [900.0, 1992.0], [1000.0, 1732.0], [1100.0, 1089.0], [1200.0, 579.0], [1300.0, 293.0], [1400.0, 141.0], [1500.0, 104.0], [1600.0, 72.0], [1700.0, 63.0], [1800.0, 50.0], [1900.0, 31.0], [2000.0, 36.0], [2100.0, 36.0], [2300.0, 36.0], [2200.0, 28.0], [2400.0, 38.0], [2500.0, 29.0], [2600.0, 25.0], [2700.0, 26.0], [2800.0, 25.0], [2900.0, 26.0], [3000.0, 32.0], [3100.0, 23.0], [3200.0, 16.0], [3300.0, 20.0], [3400.0, 26.0], [3500.0, 23.0], [3700.0, 16.0], [3600.0, 14.0], [3800.0, 25.0], [3900.0, 21.0], [4000.0, 14.0], [4100.0, 18.0], [4200.0, 19.0], [4300.0, 13.0], [4400.0, 16.0], [4600.0, 9.0], [4500.0, 14.0], [4800.0, 9.0], [4700.0, 6.0], [5000.0, 8.0], [4900.0, 9.0], [5100.0, 12.0], [5300.0, 13.0], [5200.0, 13.0], [5400.0, 15.0], [5600.0, 10.0], [5500.0, 3.0], [5700.0, 5.0], [5800.0, 9.0], [6100.0, 8.0], [6000.0, 9.0], [5900.0, 8.0], [6300.0, 7.0], [6200.0, 5.0], [6500.0, 7.0], [6400.0, 3.0], [6600.0, 4.0], [6800.0, 6.0], [6700.0, 4.0], [6900.0, 2.0], [7000.0, 5.0], [7100.0, 4.0], [7200.0, 7.0], [7400.0, 4.0], [7300.0, 6.0], [7600.0, 1.0], [7500.0, 1.0], [7800.0, 2.0], [7900.0, 4.0], [7700.0, 1.0], [8100.0, 2.0], [8000.0, 2.0], [8400.0, 3.0], [8600.0, 2.0], [8200.0, 3.0], [8700.0, 5.0], [8500.0, 3.0], [8300.0, 1.0], [9200.0, 4.0], [8800.0, 5.0], [9100.0, 4.0], [8900.0, 2.0], [9000.0, 1.0], [9300.0, 3.0], [9700.0, 4.0], [9400.0, 1.0], [9500.0, 1.0], [10200.0, 3.0], [10100.0, 1.0], [10300.0, 3.0], [10400.0, 1.0], [10700.0, 2.0], [10500.0, 1.0], [10900.0, 5.0], [10800.0, 1.0], [11200.0, 3.0], [11000.0, 1.0], [11100.0, 2.0], [11300.0, 3.0], [11400.0, 2.0], [11800.0, 2.0], [11900.0, 2.0], [12000.0, 2.0], [12300.0, 1.0], [13000.0, 1.0], [12900.0, 2.0], [13300.0, 1.0], [13500.0, 1.0], [14700.0, 3.0], [15300.0, 1.0], [15000.0, 1.0], [15200.0, 2.0], [15500.0, 1.0], [15800.0, 1.0], [15400.0, 1.0], [17100.0, 1.0], [18200.0, 1.0], [18300.0, 1.0], [18000.0, 1.0], [19400.0, 1.0], [18900.0, 1.0], [19000.0, 2.0], [19300.0, 2.0], [20100.0, 2.0], [19700.0, 1.0], [21000.0, 1.0], [20900.0, 1.0], [21200.0, 1.0], [21600.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2286.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 15893.0, "series": [{"data": [[0.0, 9373.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 15893.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2286.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.703703703703704, "minX": 1.61055252E12, "maxY": 95.33067385444758, "series": [{"data": [[1.61055264E12, 4.703703703703704], [1.6105527E12, 43.377854111941794], [1.61055276E12, 81.14363570303993]], "isOverall": false, "label": "Stress_Test", "isController": false}, {"data": [[1.61055264E12, 73.85340314136116]], "isOverall": false, "label": "Spike_Test", "isController": false}, {"data": [[1.61055252E12, 92.43249324932506], [1.61055258E12, 95.33067385444758]], "isOverall": false, "label": "Load_Test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61055276E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 282.29411764705884, "minX": 1.0, "maxY": 8058.666666666666, "series": [{"data": [[2.0, 3588.0], [3.0, 4280.8], [4.0, 3658.0], [5.0, 2152.75], [6.0, 1837.125], [7.0, 1071.1818181818182], [8.0, 1551.3636363636363], [9.0, 824.3571428571428], [10.0, 691.2307692307693], [11.0, 994.7857142857141], [12.0, 671.0625], [13.0, 621.8235294117646], [14.0, 648.0526315789473], [15.0, 1258.4285714285713], [16.0, 640.304347826087], [17.0, 736.8], [18.0, 901.2727272727274], [19.0, 853.0434782608695], [20.0, 928.4166666666667], [21.0, 1165.2499999999998], [22.0, 610.875], [23.0, 974.0294117647061], [24.0, 691.5666666666667], [25.0, 814.4642857142857], [26.0, 684.6842105263158], [27.0, 736.7777777777777], [28.0, 1017.3333333333331], [29.0, 785.7058823529413], [30.0, 776.5454545454546], [31.0, 850.2285714285715], [32.0, 588.4545454545455], [33.0, 777.9310344827586], [34.0, 639.7714285714287], [35.0, 741.0666666666665], [36.0, 1721.9117647058827], [37.0, 1047.1999999999996], [38.0, 801.9200000000001], [39.0, 1296.6842105263156], [40.0, 1079.142857142857], [41.0, 1162.9600000000003], [42.0, 982.3999999999999], [43.0, 688.1999999999998], [44.0, 851.9268292682925], [45.0, 1346.0750000000005], [46.0, 907.6585365853659], [47.0, 1405.5], [48.0, 1417.4999999999998], [49.0, 1286.658536585366], [50.0, 1068.8529411764705], [51.0, 1248.581395348837], [52.0, 1811.3333333333333], [53.0, 1957.421052631579], [54.0, 923.8076923076926], [55.0, 1318.4249999999997], [56.0, 1040.2413793103442], [57.0, 1424.0909090909092], [58.0, 1248.5510204081636], [59.0, 1321.5671641791043], [60.0, 1142.1272727272726], [61.0, 1226.0645161290324], [62.0, 1075.9180327868853], [63.0, 957.041095890411], [64.0, 1013.4374999999999], [65.0, 1055.4324324324325], [66.0, 1056.5789473684208], [67.0, 1394.175675675676], [68.0, 966.3625], [69.0, 1013.4487179487185], [70.0, 892.3571428571431], [71.0, 840.5945945945948], [72.0, 1011.7727272727274], [73.0, 760.2777777777778], [74.0, 774.75], [75.0, 985.0208333333331], [76.0, 787.0510204081631], [77.0, 982.9350649350652], [78.0, 939.5760869565217], [79.0, 776.1979166666665], [80.0, 876.2023809523811], [81.0, 1024.561797752809], [82.0, 914.5555555555555], [83.0, 931.4941176470589], [84.0, 983.7999999999997], [85.0, 860.3953488372097], [86.0, 1004.1860465116278], [87.0, 869.313953488372], [88.0, 780.2054794520548], [89.0, 936.4915254237284], [90.0, 989.7741935483872], [91.0, 820.8918918918919], [92.0, 1158.7272727272727], [93.0, 1056.9999999999995], [94.0, 1136.4081632653065], [95.0, 1036.255813953488], [96.0, 932.4414414414415], [97.0, 936.3473684210528], [98.0, 914.4999999999998], [99.0, 970.7849462365592], [100.0, 1251.2487537387854], [1.0, 7709.666666666666]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[80.65527003484343, 1113.966463414629]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 300.8], [3.0, 367.2], [4.0, 324.5], [5.0, 308.0], [6.0, 295.625], [7.0, 298.81818181818176], [8.0, 299.27272727272725], [9.0, 290.7857142857143], [10.0, 294.9230769230769], [11.0, 290.2857142857143], [12.0, 289.12499999999994], [13.0, 282.29411764705884], [14.0, 296.4210526315789], [15.0, 306.6666666666667], [16.0, 286.82608695652175], [17.0, 289.91999999999996], [18.0, 300.590909090909], [19.0, 297.47826086956525], [20.0, 296.7083333333333], [21.0, 282.78571428571416], [22.0, 303.625], [23.0, 291.88235294117646], [24.0, 290.79999999999995], [25.0, 288.00000000000006], [26.0, 294.7368421052631], [27.0, 299.22222222222223], [28.0, 303.15151515151524], [29.0, 289.7941176470588], [30.0, 303.69696969696975], [31.0, 290.02857142857135], [32.0, 282.7575757575758], [33.0, 290.06896551724145], [34.0, 296.88571428571424], [35.0, 292.8666666666667], [36.0, 290.9411764705883], [37.0, 283.9714285714286], [38.0, 301.34000000000003], [39.0, 296.5263157894737], [40.0, 291.1836734693877], [41.0, 286.56000000000006], [42.0, 287.5454545454546], [43.0, 294.37777777777785], [44.0, 294.0731707317073], [45.0, 299.8250000000001], [46.0, 298.1463414634146], [47.0, 366.65000000000003], [48.0, 394.8684210526316], [49.0, 428.8292682926829], [50.0, 362.0], [51.0, 319.34883720930236], [52.0, 344.1515151515152], [53.0, 363.18421052631584], [54.0, 309.9230769230769], [55.0, 306.7250000000001], [56.0, 291.0344827586206], [57.0, 305.47272727272724], [58.0, 292.91836734693885], [59.0, 303.4328358208957], [60.0, 307.5090909090907], [61.0, 314.9354838709679], [62.0, 297.13114754098376], [63.0, 325.6027397260273], [64.0, 306.984375], [65.0, 318.3513513513514], [66.0, 302.4605263157894], [67.0, 311.1081081081081], [68.0, 310.47500000000014], [69.0, 297.99999999999983], [70.0, 322.0999999999999], [71.0, 302.4864864864865], [72.0, 305.1250000000001], [73.0, 300.6388888888889], [74.0, 300.0], [75.0, 306.8229166666667], [76.0, 305.4387755102039], [77.0, 303.90909090909093], [78.0, 303.6195652173912], [79.0, 310.99999999999994], [80.0, 316.07142857142867], [81.0, 316.8651685393258], [82.0, 312.06944444444446], [83.0, 329.30588235294107], [84.0, 327.48421052631574], [85.0, 317.60465116279073], [86.0, 308.04651162790697], [87.0, 316.3372093023257], [88.0, 325.013698630137], [89.0, 334.69491525423734], [90.0, 335.49462365591387], [91.0, 323.4594594594594], [92.0, 323.060606060606], [93.0, 328.6874999999999], [94.0, 331.06122448979585], [95.0, 355.7790697674419], [96.0, 343.55855855855856], [97.0, 327.821052631579], [98.0, 339.2500000000001], [99.0, 336.76344086021527], [100.0, 310.30333998006], [1.0, 349.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[80.65527003484343, 312.4641768292681]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 3888.8], [3.0, 4648.2], [4.0, 3982.5], [5.0, 2460.75], [6.0, 2132.875], [7.0, 1370.0909090909092], [8.0, 1850.818181818182], [9.0, 1115.142857142857], [10.0, 986.1538461538462], [11.0, 1285.1428571428573], [12.0, 960.25], [13.0, 904.1764705882354], [14.0, 944.4736842105264], [15.0, 1565.5238095238094], [16.0, 927.3478260869565], [17.0, 1026.88], [18.0, 1201.909090909091], [19.0, 1150.6521739130435], [20.0, 1225.208333333333], [21.0, 1448.1071428571431], [22.0, 914.5833333333333], [23.0, 1265.970588235294], [24.0, 982.6], [25.0, 1102.2857142857144], [26.0, 979.3947368421051], [27.0, 1036.1111111111109], [28.0, 1320.5454545454543], [29.0, 1075.5294117647056], [30.0, 1080.3939393939395], [31.0, 1140.3142857142857], [32.0, 871.3333333333334], [33.0, 1068.1034482758623], [34.0, 936.8], [35.0, 1033.966666666667], [36.0, 2012.9411764705883], [37.0, 1331.2285714285713], [38.0, 1103.2800000000007], [39.0, 1593.3157894736844], [40.0, 1370.3673469387752], [41.0, 1449.5600000000002], [42.0, 1270.0181818181818], [43.0, 982.6222222222221], [44.0, 1146.048780487805], [45.0, 1645.875], [46.0, 1205.9512195121954], [47.0, 1772.25], [48.0, 1812.3684210526317], [49.0, 1715.5609756097563], [50.0, 1430.941176470588], [51.0, 1568.093023255814], [52.0, 2155.5454545454545], [53.0, 2320.6578947368425], [54.0, 1233.8269230769229], [55.0, 1625.1500000000003], [56.0, 1331.3620689655168], [57.0, 1729.5999999999997], [58.0, 1541.530612244898], [59.0, 1625.1343283582084], [60.0, 1449.8181818181815], [61.0, 1541.3870967741939], [62.0, 1373.0983606557377], [63.0, 1282.7123287671238], [64.0, 1320.4843749999995], [65.0, 1373.7162162162156], [66.0, 1358.9605263157898], [67.0, 1705.2972972972968], [68.0, 1276.8374999999996], [69.0, 1311.538461538461], [70.0, 1214.6142857142852], [71.0, 1143.324324324324], [72.0, 1316.9659090909092], [73.0, 1060.9722222222224], [74.0, 1074.8068181818185], [75.0, 1291.8541666666665], [76.0, 1092.3469387755106], [77.0, 1286.909090909091], [78.0, 1243.195652173913], [79.0, 1087.2395833333335], [80.0, 1192.464285714286], [81.0, 1341.6853932584263], [82.0, 1226.736111111111], [83.0, 1260.835294117647], [84.0, 1311.3263157894735], [85.0, 1178.1046511627906], [86.0, 1312.2790697674418], [87.0, 1185.6627906976748], [88.0, 1105.2465753424665], [89.0, 1271.279661016949], [90.0, 1325.2688172043013], [91.0, 1144.4054054054054], [92.0, 1481.8080808080808], [93.0, 1385.7375], [94.0, 1467.448979591837], [95.0, 1392.0697674418604], [96.0, 1276.0090090090089], [97.0, 1264.147368421052], [98.0, 1253.663793103448], [99.0, 1307.5698924731182], [100.0, 1561.6161515453646], [1.0, 8058.666666666666]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[80.65527003484343, 1426.491398083622]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1723.6, "minX": 1.61055252E12, "maxY": 359093.1, "series": [{"data": [[1.61055264E12, 23869.2], [1.61055252E12, 167709.4], [1.6105527E12, 188412.8], [1.61055258E12, 359093.1], [1.61055276E12, 318904.06666666665]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61055264E12, 1723.6], [1.61055252E12, 12187.133333333333], [1.6105527E12, 13604.866666666667], [1.61055258E12, 25616.333333333332], [1.61055276E12, 22789.133333333335]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61055276E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 282.5942782834851, "minX": 1.61055252E12, "maxY": 1638.375320512821, "series": [{"data": [[1.61055264E12, 1050.9371980676328], [1.61055252E12, 1083.006882312457], [1.6105527E12, 1009.3904528763767], [1.61055258E12, 1317.548717948719], [1.61055276E12, 967.2992779783383]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61055264E12, 363.7746478873239], [1.61055252E12, 282.5942782834851], [1.6105527E12, 302.7989292088048], [1.61055258E12, 321.6800658978583], [1.61055276E12, 321.0353330879651]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61055264E12, 1417.4879227053138], [1.61055252E12, 1365.399174122507], [1.6105527E12, 1312.2313341493266], [1.61055258E12, 1638.375320512821], [1.61055276E12, 1287.954873646209]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61055276E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 282.2278045423258, "minX": 1.61055252E12, "maxY": 1315.1657051282014, "series": [{"data": [[1.61055264E12, 1047.4492753623188], [1.61055252E12, 1080.1569167240184], [1.6105527E12, 1006.7888616891049], [1.61055258E12, 1315.1657051282014], [1.61055276E12, 964.9025270758103]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61055264E12, 363.7746478873239], [1.61055252E12, 282.5903771131338], [1.6105527E12, 302.79773944080915], [1.61055258E12, 321.6800658978583], [1.61055276E12, 321.03459698196576]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61055264E12, 366.3285024154589], [1.61055252E12, 282.2278045423258], [1.6105527E12, 302.8072215422276], [1.61055258E12, 320.7839743589754], [1.61055276E12, 320.6212996389893]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61055276E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 80.76600137646255, "minX": 1.61055252E12, "maxY": 281.7826086956523, "series": [{"data": [[1.61055264E12, 281.7826086956523], [1.61055252E12, 191.9511355815552], [1.6105527E12, 210.4761321909427], [1.61055258E12, 239.98557692307662], [1.61055276E12, 234.27400722021662]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.61055264E12, 122.4460093896713], [1.61055252E12, 81.2483745123537], [1.6105527E12, 92.75133848899466], [1.61055258E12, 104.88171334431644], [1.61055276E12, 103.86492454913481]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.61055264E12, 123.79710144927529], [1.61055252E12, 80.76600137646255], [1.6105527E12, 92.79436964504286], [1.61055258E12, 104.46250000000009], [1.61055276E12, 103.59025270758126]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61055276E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 225.0, "minX": 1.61055252E12, "maxY": 21609.0, "series": [{"data": [[1.61055264E12, 4639.0], [1.61055252E12, 21609.0], [1.6105527E12, 11412.0], [1.61055258E12, 21253.0], [1.61055276E12, 12922.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61055264E12, 1576.4000000000005], [1.61055252E12, 1253.0], [1.6105527E12, 1253.0], [1.61055258E12, 1456.7999999999993], [1.61055276E12, 1242.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61055264E12, 4253.4400000000005], [1.61055252E12, 5780.150000000021], [1.6105527E12, 6444.0], [1.61055258E12, 9948.399999999976], [1.61055276E12, 5012.540000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61055264E12, 1914.6000000000008], [1.61055252E12, 2584.0], [1.6105527E12, 2544.5], [1.61055258E12, 3535.5999999999913], [1.61055276E12, 2019.199999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61055264E12, 254.0], [1.61055252E12, 230.0], [1.6105527E12, 225.0], [1.61055258E12, 233.0], [1.61055276E12, 242.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61055264E12, 829.0], [1.61055252E12, 626.0], [1.6105527E12, 640.0], [1.61055258E12, 753.0], [1.61055276E12, 709.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61055276E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 297.0, "minX": 1.0, "maxY": 7552.0, "series": [{"data": [[2.0, 7164.0], [4.0, 7552.0], [5.0, 300.0], [6.0, 349.5], [8.0, 3775.0], [10.0, 856.0], [11.0, 787.0], [12.0, 4137.5], [14.0, 538.5], [17.0, 697.5], [21.0, 574.0], [22.0, 643.0], [30.0, 608.0], [33.0, 842.0], [34.0, 608.5], [35.0, 640.0], [37.0, 595.0], [38.0, 741.0], [39.0, 585.0], [41.0, 539.0], [40.0, 606.0], [47.0, 639.0], [49.0, 382.0], [48.0, 687.5], [51.0, 588.0], [50.0, 639.0], [55.0, 877.0], [59.0, 586.0], [61.0, 773.0], [60.0, 619.0], [63.0, 794.0], [62.0, 679.0], [65.0, 636.0], [69.0, 544.5], [71.0, 562.0], [68.0, 797.0], [72.0, 595.0], [74.0, 590.5], [73.0, 585.5], [79.0, 652.5], [77.0, 604.0], [81.0, 560.0], [80.0, 673.0], [86.0, 644.5], [84.0, 639.0], [91.0, 769.0], [88.0, 726.0], [95.0, 593.0], [94.0, 750.0], [98.0, 579.0], [100.0, 713.5], [103.0, 635.0], [104.0, 550.0], [110.0, 614.0], [109.0, 638.0], [113.0, 725.0], [119.0, 567.0], [116.0, 731.0], [120.0, 613.0], [121.0, 734.0], [125.0, 776.5], [132.0, 784.0], [128.0, 806.5], [135.0, 769.0], [143.0, 622.0], [141.0, 761.0], [142.0, 791.0], [136.0, 913.5], [139.0, 1234.0], [140.0, 683.5], [149.0, 753.0], [146.0, 788.5], [152.0, 724.0], [153.0, 758.0], [155.0, 677.0], [157.0, 726.0], [167.0, 739.0], [160.0, 739.5], [164.0, 713.5], [172.0, 600.0], [173.0, 749.0], [174.0, 741.5], [168.0, 768.5], [169.0, 774.0], [180.0, 723.0], [178.0, 789.0], [179.0, 786.0], [177.0, 678.5], [182.0, 658.0], [190.0, 659.5], [186.0, 744.5], [191.0, 668.0], [185.0, 762.5], [184.0, 654.0], [188.0, 651.5], [187.0, 639.0], [189.0, 727.0], [195.0, 726.0], [197.0, 671.0], [193.0, 772.0], [194.0, 696.5], [198.0, 761.0], [192.0, 703.0], [200.0, 714.0], [207.0, 805.0], [201.0, 698.0], [206.0, 731.0], [203.0, 722.0], [204.0, 714.0], [202.0, 714.5], [205.0, 686.0], [209.0, 655.0], [214.0, 705.0], [215.0, 744.0], [210.0, 742.0], [212.0, 743.0], [211.0, 695.0], [213.0, 781.0], [208.0, 735.5], [216.0, 783.5], [223.0, 753.0], [217.0, 695.0], [220.0, 657.5], [222.0, 736.5], [218.0, 731.5], [229.0, 637.0], [227.0, 616.5], [224.0, 669.0], [226.0, 744.5], [228.0, 677.0], [234.0, 690.0], [238.0, 622.5], [235.0, 657.0], [244.0, 726.0], [1.0, 297.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 244.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 278.0, "minX": 1.0, "maxY": 3382.5, "series": [{"data": [[2.0, 3382.5], [4.0, 1548.5], [5.0, 291.0], [6.0, 299.0], [8.0, 925.5], [10.0, 422.5], [11.0, 313.0], [12.0, 1768.0], [14.0, 312.5], [17.0, 316.5], [21.0, 292.0], [22.0, 299.5], [30.0, 291.5], [33.0, 325.0], [34.0, 282.0], [35.0, 280.0], [37.0, 292.0], [38.0, 321.5], [39.0, 284.0], [41.0, 278.0], [40.0, 304.0], [47.0, 290.0], [49.0, 359.5], [48.0, 310.0], [51.0, 293.0], [50.0, 291.0], [55.0, 520.0], [59.0, 306.0], [61.0, 394.0], [60.0, 294.0], [63.0, 338.0], [62.0, 337.0], [65.0, 292.0], [69.0, 295.0], [71.0, 288.0], [68.0, 461.0], [72.0, 292.0], [74.0, 289.0], [73.0, 297.0], [79.0, 321.0], [77.0, 298.5], [81.0, 294.0], [80.0, 352.0], [86.0, 338.0], [84.0, 346.0], [91.0, 291.0], [88.0, 335.0], [95.0, 301.0], [94.0, 328.5], [98.0, 298.5], [100.0, 337.0], [103.0, 306.0], [104.0, 292.0], [110.0, 300.0], [109.0, 305.0], [113.0, 302.0], [119.0, 302.0], [116.0, 290.0], [120.0, 296.0], [121.0, 337.0], [125.0, 337.5], [132.0, 294.0], [128.0, 302.5], [135.0, 321.0], [143.0, 289.0], [141.0, 336.0], [142.0, 349.0], [136.0, 412.0], [139.0, 441.0], [140.0, 319.5], [149.0, 294.0], [146.0, 341.0], [152.0, 310.5], [153.0, 301.0], [155.0, 334.0], [157.0, 348.0], [167.0, 368.5], [160.0, 379.0], [164.0, 354.5], [172.0, 292.0], [173.0, 301.0], [174.0, 369.0], [168.0, 347.0], [169.0, 330.0], [180.0, 342.5], [178.0, 399.0], [179.0, 447.0], [177.0, 314.0], [182.0, 320.0], [190.0, 290.0], [186.0, 330.0], [191.0, 341.0], [185.0, 360.5], [184.0, 312.0], [188.0, 303.0], [187.0, 312.0], [189.0, 357.0], [195.0, 343.0], [197.0, 300.5], [193.0, 332.0], [194.0, 310.0], [198.0, 365.5], [192.0, 344.0], [200.0, 335.0], [207.0, 300.0], [201.0, 332.0], [206.0, 318.0], [203.0, 342.0], [204.0, 339.0], [202.0, 339.5], [205.0, 339.5], [209.0, 329.0], [214.0, 294.0], [215.0, 330.0], [210.0, 367.5], [212.0, 338.5], [211.0, 336.5], [213.0, 347.0], [208.0, 352.0], [216.0, 297.5], [223.0, 305.0], [217.0, 308.0], [220.0, 316.0], [222.0, 323.5], [218.0, 358.0], [229.0, 292.0], [227.0, 300.0], [224.0, 322.0], [226.0, 318.0], [228.0, 326.0], [234.0, 303.0], [238.0, 325.0], [235.0, 328.0], [244.0, 290.0], [1.0, 297.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 244.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.65, "minX": 1.61055252E12, "maxY": 151.25, "series": [{"data": [[1.61055264E12, 10.65], [1.61055252E12, 77.4], [1.6105527E12, 84.48333333333333], [1.61055258E12, 151.25], [1.61055276E12, 135.41666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61055276E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.55, "minX": 1.61055252E12, "maxY": 104.0, "series": [{"data": [[1.61055264E12, 6.9], [1.61055252E12, 48.43333333333333], [1.6105527E12, 54.46666666666667], [1.61055258E12, 104.0], [1.61055276E12, 92.33333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.61055264E12, 3.55], [1.61055252E12, 25.633333333333333], [1.6105527E12, 28.016666666666666], [1.61055258E12, 50.583333333333336], [1.61055276E12, 45.28333333333333]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.61055276E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.45, "minX": 1.61055252E12, "maxY": 52.0, "series": [{"data": [[1.61055264E12, 3.45], [1.61055252E12, 24.216666666666665], [1.6105527E12, 27.233333333333334], [1.61055258E12, 52.0], [1.61055276E12, 46.166666666666664]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.61055264E12, 3.55], [1.61055252E12, 25.633333333333333], [1.6105527E12, 28.016666666666666], [1.61055258E12, 50.583333333333336], [1.61055276E12, 45.28333333333333]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.61055264E12, 3.45], [1.61055252E12, 24.216666666666665], [1.6105527E12, 27.233333333333334], [1.61055258E12, 52.0], [1.61055276E12, 46.166666666666664]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61055276E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.45, "minX": 1.61055252E12, "maxY": 154.58333333333334, "series": [{"data": [[1.61055264E12, 10.45], [1.61055252E12, 74.06666666666666], [1.6105527E12, 82.48333333333333], [1.61055258E12, 154.58333333333334], [1.61055276E12, 137.61666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.61055276E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

